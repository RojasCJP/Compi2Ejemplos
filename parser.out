Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LLAVDER
    LLAVIZQ
    PUNTO

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> print_instr LINEANUEVA
Rule 5     instruccion -> println_instr LINEANUEVA
Rule 6     instruccion -> asignacion_instr LINEANUEVA
Rule 7     instruccion -> asignacion_arreglo_instr LINEANUEVA
Rule 8     instruccion -> definicion_asignacion_instr LINEANUEVA
Rule 9     instruccion -> call_function LINEANUEVA
Rule 10    instruccion -> declare_function LINEANUEVA
Rule 11    instruccion -> return_state LINEANUEVA
Rule 12    instruccion -> break_state LINEANUEVA
Rule 13    instruccion -> continue_state LINEANUEVA
Rule 14    instruccion -> if_state LINEANUEVA
Rule 15    instruccion -> while_state LINEANUEVA
Rule 16    instruccion -> for_state LINEANUEVA
Rule 17    instruccion -> nativas LINEANUEVA
Rule 18    expression -> MENOS expression
Rule 19    expression -> NOT expression
Rule 20    expression -> expression MAS expression
Rule 21    expression -> expression MENOS expression
Rule 22    expression -> expression POR expression
Rule 23    expression -> expression DIVIDIDO expression
Rule 24    expression -> expression POTENCIA expression
Rule 25    expression -> expression MODULO expression
Rule 26    expression -> expression MAYQUE expression
Rule 27    expression -> expression MENQUE expression
Rule 28    expression -> expression MENIGUALQUE expression
Rule 29    expression -> expression MAYIGUALQUE expression
Rule 30    expression -> expression IGUALQUE expression
Rule 31    expression -> expression NIGUALQUE expression
Rule 32    expression -> expression OR expression
Rule 33    expression -> expression AND expression
Rule 34    expression -> final_expression
Rule 35    final_expression -> PARIZQ expression PARDER
Rule 36    final_expression -> CORCHETEIZQ exp_list CORCHETEDER
Rule 37    final_expression -> DECIMAL
Rule 38    final_expression -> ENTERO
Rule 39    final_expression -> CADENA
Rule 40    final_expression -> ID
Rule 41    final_expression -> ID index_list
Rule 42    final_expression -> TRUE
Rule 43    final_expression -> FALSE
Rule 44    final_expression -> call_function
Rule 45    final_expression -> nativas
Rule 46    nativas -> UPPER PARIZQ expression PARDER
Rule 47    nativas -> LOWER PARIZQ expression PARDER
Rule 48    nativas -> STR PARIZQ expression PARDER
Rule 49    nativas -> FLOAT PARIZQ expression PARDER
Rule 50    nativas -> LEN PARIZQ expression PARDER
Rule 51    print_instr -> PRINT PARIZQ exp_list PARDER
Rule 52    println_instr -> PRINTLN PARIZQ exp_list PARDER
Rule 53    tipo -> INT
Rule 54    tipo -> FLOAT
Rule 55    tipo -> BOOL
Rule 56    tipo -> STR
Rule 57    tipo -> NONE
Rule 58    asignacion_instr -> ID IGUAL expression
Rule 59    definicion_asignacion_instr -> ID DOSP tipo IGUAL expression
Rule 60    asignacion_arreglo_instr -> ID index_list IGUAL expression
Rule 61    call_function -> ID PARIZQ PARDER
Rule 62    call_function -> ID PARIZQ exp_list PARDER
Rule 63    exp_list -> exp_list COMA expression
Rule 64    exp_list -> expression
Rule 65    index_list -> index_list CORCHETEIZQ expression CORCHETEDER
Rule 66    index_list -> CORCHETEIZQ expression CORCHETEDER
Rule 67    statement -> instrucciones
Rule 68    declare_function -> DEF ID PARIZQ dec_params PARDER DOSP statement END
Rule 69    declare_function -> DEF ID PARIZQ PARDER DOSP statement END
Rule 70    dec_params -> dec_params COMA ID DOSP tipo
Rule 71    dec_params -> dec_params COMA ID
Rule 72    dec_params -> ID DOSP tipo
Rule 73    dec_params -> ID
Rule 74    if_state -> IF expression DOSP statement END
Rule 75    if_state -> IF expression DOSP statement ELSE DOSP statement END
Rule 76    if_state -> IF expression DOSP statement else_if_list END
Rule 77    else_if_list -> ELIF expression DOSP statement
Rule 78    else_if_list -> ELIF expression DOSP statement ELSE statement
Rule 79    else_if_list -> ELIF expression DOSP statement else_if_list
Rule 80    while_state -> WHILE expression DOSP statement END
Rule 81    for_state -> FOR ID IN expression DOSP expression DOSP statement END
Rule 82    for_state -> FOR ID IN expression DOSP statement END
Rule 83    break_state -> BREAK
Rule 84    continue_state -> CONTINUE
Rule 85    return_state -> RETURN
Rule 86    return_state -> RETURN expression

Terminals, with rules where they appear

AND                  : 33
BOOL                 : 55
BREAK                : 83
CADENA               : 39
COMA                 : 63 70 71
CONTINUE             : 84
CORCHETEDER          : 36 65 66
CORCHETEIZQ          : 36 65 66
DECIMAL              : 37
DEF                  : 68 69
DIVIDIDO             : 23
DOSP                 : 59 68 69 70 72 74 75 75 76 77 78 79 80 81 81 82
ELIF                 : 77 78 79
ELSE                 : 75 78
END                  : 68 69 74 75 76 80 81 82
ENTERO               : 38
FALSE                : 43
FLOAT                : 49 54
FOR                  : 81 82
ID                   : 40 41 58 59 60 61 62 68 69 70 71 72 73 81 82
IF                   : 74 75 76
IGUAL                : 58 59 60
IGUALQUE             : 30
IN                   : 81 82
INT                  : 53
LEN                  : 50
LINEANUEVA           : 4 5 6 7 8 9 10 11 12 13 14 15 16 17
LLAVDER              : 
LLAVIZQ              : 
LOWER                : 47
MAS                  : 20
MAYIGUALQUE          : 29
MAYQUE               : 26
MENIGUALQUE          : 28
MENOS                : 18 21
MENQUE               : 27
MODULO               : 25
NIGUALQUE            : 31
NONE                 : 57
NOT                  : 19
OR                   : 32
PARDER               : 35 46 47 48 49 50 51 52 61 62 68 69
PARIZQ               : 35 46 47 48 49 50 51 52 61 62 68 69
POR                  : 22
POTENCIA             : 24
PRINT                : 51
PRINTLN              : 52
PUNTO                : 
RETURN               : 85 86
STR                  : 48 56
TRUE                 : 42
UPPER                : 46
WHILE                : 80
error                : 

Nonterminals, with rules where they appear

asignacion_arreglo_instr : 7
asignacion_instr     : 6
break_state          : 12
call_function        : 9 44
continue_state       : 13
dec_params           : 68 70 71
declare_function     : 10
definicion_asignacion_instr : 8
else_if_list         : 76 79
exp_list             : 36 51 52 62 63
expression           : 18 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 35 46 47 48 49 50 58 59 60 63 64 65 66 74 75 76 77 78 79 80 81 81 82 86
final_expression     : 34
for_state            : 16
if_state             : 14
index_list           : 41 60 65
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 67
nativas              : 17 45
print_instr          : 4
println_instr        : 5
return_state         : 11
statement            : 68 69 74 75 75 76 77 78 78 79 80 81 82
tipo                 : 59 70 72
while_state          : 15

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr LINEANUEVA
    (5) instruccion -> . println_instr LINEANUEVA
    (6) instruccion -> . asignacion_instr LINEANUEVA
    (7) instruccion -> . asignacion_arreglo_instr LINEANUEVA
    (8) instruccion -> . definicion_asignacion_instr LINEANUEVA
    (9) instruccion -> . call_function LINEANUEVA
    (10) instruccion -> . declare_function LINEANUEVA
    (11) instruccion -> . return_state LINEANUEVA
    (12) instruccion -> . break_state LINEANUEVA
    (13) instruccion -> . continue_state LINEANUEVA
    (14) instruccion -> . if_state LINEANUEVA
    (15) instruccion -> . while_state LINEANUEVA
    (16) instruccion -> . for_state LINEANUEVA
    (17) instruccion -> . nativas LINEANUEVA
    (51) print_instr -> . PRINT PARIZQ exp_list PARDER
    (52) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (58) asignacion_instr -> . ID IGUAL expression
    (60) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (59) definicion_asignacion_instr -> . ID DOSP tipo IGUAL expression
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (68) declare_function -> . DEF ID PARIZQ dec_params PARDER DOSP statement END
    (69) declare_function -> . DEF ID PARIZQ PARDER DOSP statement END
    (85) return_state -> . RETURN
    (86) return_state -> . RETURN expression
    (83) break_state -> . BREAK
    (84) continue_state -> . CONTINUE
    (74) if_state -> . IF expression DOSP statement END
    (75) if_state -> . IF expression DOSP statement ELSE DOSP statement END
    (76) if_state -> . IF expression DOSP statement else_if_list END
    (80) while_state -> . WHILE expression DOSP statement END
    (81) for_state -> . FOR ID IN expression DOSP expression DOSP statement END
    (82) for_state -> . FOR ID IN expression DOSP statement END
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 20
    DEF             shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    asignacion_instr               shift and go to state 6
    asignacion_arreglo_instr       shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16
    nativas                        shift and go to state 17

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print_instr LINEANUEVA
    (5) instruccion -> . println_instr LINEANUEVA
    (6) instruccion -> . asignacion_instr LINEANUEVA
    (7) instruccion -> . asignacion_arreglo_instr LINEANUEVA
    (8) instruccion -> . definicion_asignacion_instr LINEANUEVA
    (9) instruccion -> . call_function LINEANUEVA
    (10) instruccion -> . declare_function LINEANUEVA
    (11) instruccion -> . return_state LINEANUEVA
    (12) instruccion -> . break_state LINEANUEVA
    (13) instruccion -> . continue_state LINEANUEVA
    (14) instruccion -> . if_state LINEANUEVA
    (15) instruccion -> . while_state LINEANUEVA
    (16) instruccion -> . for_state LINEANUEVA
    (17) instruccion -> . nativas LINEANUEVA
    (51) print_instr -> . PRINT PARIZQ exp_list PARDER
    (52) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (58) asignacion_instr -> . ID IGUAL expression
    (60) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (59) definicion_asignacion_instr -> . ID DOSP tipo IGUAL expression
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (68) declare_function -> . DEF ID PARIZQ dec_params PARDER DOSP statement END
    (69) declare_function -> . DEF ID PARIZQ PARDER DOSP statement END
    (85) return_state -> . RETURN
    (86) return_state -> . RETURN expression
    (83) break_state -> . BREAK
    (84) continue_state -> . CONTINUE
    (74) if_state -> . IF expression DOSP statement END
    (75) if_state -> . IF expression DOSP statement ELSE DOSP statement END
    (76) if_state -> . IF expression DOSP statement else_if_list END
    (80) while_state -> . WHILE expression DOSP statement END
    (81) for_state -> . FOR ID IN expression DOSP expression DOSP statement END
    (82) for_state -> . FOR ID IN expression DOSP statement END
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    $end            reduce using rule 1 (init -> instrucciones .)
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 20
    DEF             shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    instruccion                    shift and go to state 33
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    asignacion_instr               shift and go to state 6
    asignacion_arreglo_instr       shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16
    nativas                        shift and go to state 17

state 3

    (3) instrucciones -> instruccion .

    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    DEF             reduce using rule 3 (instrucciones -> instruccion .)
    RETURN          reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    FOR             reduce using rule 3 (instrucciones -> instruccion .)
    UPPER           reduce using rule 3 (instrucciones -> instruccion .)
    LOWER           reduce using rule 3 (instrucciones -> instruccion .)
    STR             reduce using rule 3 (instrucciones -> instruccion .)
    FLOAT           reduce using rule 3 (instrucciones -> instruccion .)
    LEN             reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    END             reduce using rule 3 (instrucciones -> instruccion .)
    ELSE            reduce using rule 3 (instrucciones -> instruccion .)
    ELIF            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> print_instr . LINEANUEVA

    LINEANUEVA      shift and go to state 34


state 5

    (5) instruccion -> println_instr . LINEANUEVA

    LINEANUEVA      shift and go to state 35


state 6

    (6) instruccion -> asignacion_instr . LINEANUEVA

    LINEANUEVA      shift and go to state 36


state 7

    (7) instruccion -> asignacion_arreglo_instr . LINEANUEVA

    LINEANUEVA      shift and go to state 37


state 8

    (8) instruccion -> definicion_asignacion_instr . LINEANUEVA

    LINEANUEVA      shift and go to state 38


state 9

    (9) instruccion -> call_function . LINEANUEVA

    LINEANUEVA      shift and go to state 39


state 10

    (10) instruccion -> declare_function . LINEANUEVA

    LINEANUEVA      shift and go to state 40


state 11

    (11) instruccion -> return_state . LINEANUEVA

    LINEANUEVA      shift and go to state 41


state 12

    (12) instruccion -> break_state . LINEANUEVA

    LINEANUEVA      shift and go to state 42


state 13

    (13) instruccion -> continue_state . LINEANUEVA

    LINEANUEVA      shift and go to state 43


state 14

    (14) instruccion -> if_state . LINEANUEVA

    LINEANUEVA      shift and go to state 44


state 15

    (15) instruccion -> while_state . LINEANUEVA

    LINEANUEVA      shift and go to state 45


state 16

    (16) instruccion -> for_state . LINEANUEVA

    LINEANUEVA      shift and go to state 46


state 17

    (17) instruccion -> nativas . LINEANUEVA

    LINEANUEVA      shift and go to state 47


state 18

    (51) print_instr -> PRINT . PARIZQ exp_list PARDER

    PARIZQ          shift and go to state 48


state 19

    (52) println_instr -> PRINTLN . PARIZQ exp_list PARDER

    PARIZQ          shift and go to state 49


state 20

    (58) asignacion_instr -> ID . IGUAL expression
    (60) asignacion_arreglo_instr -> ID . index_list IGUAL expression
    (59) definicion_asignacion_instr -> ID . DOSP tipo IGUAL expression
    (61) call_function -> ID . PARIZQ PARDER
    (62) call_function -> ID . PARIZQ exp_list PARDER
    (65) index_list -> . index_list CORCHETEIZQ expression CORCHETEDER
    (66) index_list -> . CORCHETEIZQ expression CORCHETEDER

    IGUAL           shift and go to state 50
    DOSP            shift and go to state 52
    PARIZQ          shift and go to state 53
    CORCHETEIZQ     shift and go to state 54

    index_list                     shift and go to state 51

state 21

    (68) declare_function -> DEF . ID PARIZQ dec_params PARDER DOSP statement END
    (69) declare_function -> DEF . ID PARIZQ PARDER DOSP statement END

    ID              shift and go to state 55


state 22

    (85) return_state -> RETURN .
    (86) return_state -> RETURN . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    LINEANUEVA      reduce using rule 85 (return_state -> RETURN .)
    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 56
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 23

    (83) break_state -> BREAK .

    LINEANUEVA      reduce using rule 83 (break_state -> BREAK .)


state 24

    (84) continue_state -> CONTINUE .

    LINEANUEVA      reduce using rule 84 (continue_state -> CONTINUE .)


state 25

    (74) if_state -> IF . expression DOSP statement END
    (75) if_state -> IF . expression DOSP statement ELSE DOSP statement END
    (76) if_state -> IF . expression DOSP statement else_if_list END
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 70
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 26

    (80) while_state -> WHILE . expression DOSP statement END
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 71
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 27

    (81) for_state -> FOR . ID IN expression DOSP expression DOSP statement END
    (82) for_state -> FOR . ID IN expression DOSP statement END

    ID              shift and go to state 72


state 28

    (46) nativas -> UPPER . PARIZQ expression PARDER

    PARIZQ          shift and go to state 73


state 29

    (47) nativas -> LOWER . PARIZQ expression PARDER

    PARIZQ          shift and go to state 74


state 30

    (48) nativas -> STR . PARIZQ expression PARDER

    PARIZQ          shift and go to state 75


state 31

    (49) nativas -> FLOAT . PARIZQ expression PARDER

    PARIZQ          shift and go to state 76


state 32

    (50) nativas -> LEN . PARIZQ expression PARDER

    PARIZQ          shift and go to state 77


state 33

    (2) instrucciones -> instrucciones instruccion .

    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DEF             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    UPPER           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOWER           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    STR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FLOAT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LEN             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    END             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ELSE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ELIF            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 34

    (4) instruccion -> print_instr LINEANUEVA .

    PRINT           reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)
    PRINTLN         reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)
    ID              reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)
    DEF             reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)
    RETURN          reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)
    BREAK           reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)
    CONTINUE        reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)
    IF              reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)
    WHILE           reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)
    FOR             reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)
    UPPER           reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)
    LOWER           reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)
    STR             reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)
    FLOAT           reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)
    LEN             reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)
    $end            reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)
    END             reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)
    ELSE            reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)
    ELIF            reduce using rule 4 (instruccion -> print_instr LINEANUEVA .)


state 35

    (5) instruccion -> println_instr LINEANUEVA .

    PRINT           reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)
    PRINTLN         reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)
    ID              reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)
    DEF             reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)
    RETURN          reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)
    BREAK           reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)
    CONTINUE        reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)
    IF              reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)
    WHILE           reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)
    FOR             reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)
    UPPER           reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)
    LOWER           reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)
    STR             reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)
    FLOAT           reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)
    LEN             reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)
    $end            reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)
    END             reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)
    ELSE            reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)
    ELIF            reduce using rule 5 (instruccion -> println_instr LINEANUEVA .)


state 36

    (6) instruccion -> asignacion_instr LINEANUEVA .

    PRINT           reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)
    PRINTLN         reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)
    ID              reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)
    DEF             reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)
    RETURN          reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)
    BREAK           reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)
    CONTINUE        reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)
    IF              reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)
    WHILE           reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)
    FOR             reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)
    UPPER           reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)
    LOWER           reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)
    STR             reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)
    FLOAT           reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)
    LEN             reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)
    $end            reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)
    END             reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)
    ELSE            reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)
    ELIF            reduce using rule 6 (instruccion -> asignacion_instr LINEANUEVA .)


state 37

    (7) instruccion -> asignacion_arreglo_instr LINEANUEVA .

    PRINT           reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)
    PRINTLN         reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)
    ID              reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)
    DEF             reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)
    RETURN          reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)
    BREAK           reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)
    CONTINUE        reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)
    IF              reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)
    WHILE           reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)
    FOR             reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)
    UPPER           reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)
    LOWER           reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)
    STR             reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)
    FLOAT           reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)
    LEN             reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)
    $end            reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)
    END             reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)
    ELSE            reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)
    ELIF            reduce using rule 7 (instruccion -> asignacion_arreglo_instr LINEANUEVA .)


state 38

    (8) instruccion -> definicion_asignacion_instr LINEANUEVA .

    PRINT           reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)
    PRINTLN         reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)
    ID              reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)
    DEF             reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)
    RETURN          reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)
    BREAK           reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)
    CONTINUE        reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)
    IF              reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)
    WHILE           reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)
    FOR             reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)
    UPPER           reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)
    LOWER           reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)
    STR             reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)
    FLOAT           reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)
    LEN             reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)
    $end            reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)
    END             reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)
    ELSE            reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)
    ELIF            reduce using rule 8 (instruccion -> definicion_asignacion_instr LINEANUEVA .)


state 39

    (9) instruccion -> call_function LINEANUEVA .

    PRINT           reduce using rule 9 (instruccion -> call_function LINEANUEVA .)
    PRINTLN         reduce using rule 9 (instruccion -> call_function LINEANUEVA .)
    ID              reduce using rule 9 (instruccion -> call_function LINEANUEVA .)
    DEF             reduce using rule 9 (instruccion -> call_function LINEANUEVA .)
    RETURN          reduce using rule 9 (instruccion -> call_function LINEANUEVA .)
    BREAK           reduce using rule 9 (instruccion -> call_function LINEANUEVA .)
    CONTINUE        reduce using rule 9 (instruccion -> call_function LINEANUEVA .)
    IF              reduce using rule 9 (instruccion -> call_function LINEANUEVA .)
    WHILE           reduce using rule 9 (instruccion -> call_function LINEANUEVA .)
    FOR             reduce using rule 9 (instruccion -> call_function LINEANUEVA .)
    UPPER           reduce using rule 9 (instruccion -> call_function LINEANUEVA .)
    LOWER           reduce using rule 9 (instruccion -> call_function LINEANUEVA .)
    STR             reduce using rule 9 (instruccion -> call_function LINEANUEVA .)
    FLOAT           reduce using rule 9 (instruccion -> call_function LINEANUEVA .)
    LEN             reduce using rule 9 (instruccion -> call_function LINEANUEVA .)
    $end            reduce using rule 9 (instruccion -> call_function LINEANUEVA .)
    END             reduce using rule 9 (instruccion -> call_function LINEANUEVA .)
    ELSE            reduce using rule 9 (instruccion -> call_function LINEANUEVA .)
    ELIF            reduce using rule 9 (instruccion -> call_function LINEANUEVA .)


state 40

    (10) instruccion -> declare_function LINEANUEVA .

    PRINT           reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)
    PRINTLN         reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)
    ID              reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)
    DEF             reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)
    RETURN          reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)
    BREAK           reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)
    CONTINUE        reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)
    IF              reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)
    WHILE           reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)
    FOR             reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)
    UPPER           reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)
    LOWER           reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)
    STR             reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)
    FLOAT           reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)
    LEN             reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)
    $end            reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)
    END             reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)
    ELSE            reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)
    ELIF            reduce using rule 10 (instruccion -> declare_function LINEANUEVA .)


state 41

    (11) instruccion -> return_state LINEANUEVA .

    PRINT           reduce using rule 11 (instruccion -> return_state LINEANUEVA .)
    PRINTLN         reduce using rule 11 (instruccion -> return_state LINEANUEVA .)
    ID              reduce using rule 11 (instruccion -> return_state LINEANUEVA .)
    DEF             reduce using rule 11 (instruccion -> return_state LINEANUEVA .)
    RETURN          reduce using rule 11 (instruccion -> return_state LINEANUEVA .)
    BREAK           reduce using rule 11 (instruccion -> return_state LINEANUEVA .)
    CONTINUE        reduce using rule 11 (instruccion -> return_state LINEANUEVA .)
    IF              reduce using rule 11 (instruccion -> return_state LINEANUEVA .)
    WHILE           reduce using rule 11 (instruccion -> return_state LINEANUEVA .)
    FOR             reduce using rule 11 (instruccion -> return_state LINEANUEVA .)
    UPPER           reduce using rule 11 (instruccion -> return_state LINEANUEVA .)
    LOWER           reduce using rule 11 (instruccion -> return_state LINEANUEVA .)
    STR             reduce using rule 11 (instruccion -> return_state LINEANUEVA .)
    FLOAT           reduce using rule 11 (instruccion -> return_state LINEANUEVA .)
    LEN             reduce using rule 11 (instruccion -> return_state LINEANUEVA .)
    $end            reduce using rule 11 (instruccion -> return_state LINEANUEVA .)
    END             reduce using rule 11 (instruccion -> return_state LINEANUEVA .)
    ELSE            reduce using rule 11 (instruccion -> return_state LINEANUEVA .)
    ELIF            reduce using rule 11 (instruccion -> return_state LINEANUEVA .)


state 42

    (12) instruccion -> break_state LINEANUEVA .

    PRINT           reduce using rule 12 (instruccion -> break_state LINEANUEVA .)
    PRINTLN         reduce using rule 12 (instruccion -> break_state LINEANUEVA .)
    ID              reduce using rule 12 (instruccion -> break_state LINEANUEVA .)
    DEF             reduce using rule 12 (instruccion -> break_state LINEANUEVA .)
    RETURN          reduce using rule 12 (instruccion -> break_state LINEANUEVA .)
    BREAK           reduce using rule 12 (instruccion -> break_state LINEANUEVA .)
    CONTINUE        reduce using rule 12 (instruccion -> break_state LINEANUEVA .)
    IF              reduce using rule 12 (instruccion -> break_state LINEANUEVA .)
    WHILE           reduce using rule 12 (instruccion -> break_state LINEANUEVA .)
    FOR             reduce using rule 12 (instruccion -> break_state LINEANUEVA .)
    UPPER           reduce using rule 12 (instruccion -> break_state LINEANUEVA .)
    LOWER           reduce using rule 12 (instruccion -> break_state LINEANUEVA .)
    STR             reduce using rule 12 (instruccion -> break_state LINEANUEVA .)
    FLOAT           reduce using rule 12 (instruccion -> break_state LINEANUEVA .)
    LEN             reduce using rule 12 (instruccion -> break_state LINEANUEVA .)
    $end            reduce using rule 12 (instruccion -> break_state LINEANUEVA .)
    END             reduce using rule 12 (instruccion -> break_state LINEANUEVA .)
    ELSE            reduce using rule 12 (instruccion -> break_state LINEANUEVA .)
    ELIF            reduce using rule 12 (instruccion -> break_state LINEANUEVA .)


state 43

    (13) instruccion -> continue_state LINEANUEVA .

    PRINT           reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)
    PRINTLN         reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)
    ID              reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)
    DEF             reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)
    RETURN          reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)
    BREAK           reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)
    CONTINUE        reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)
    IF              reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)
    WHILE           reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)
    FOR             reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)
    UPPER           reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)
    LOWER           reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)
    STR             reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)
    FLOAT           reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)
    LEN             reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)
    $end            reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)
    END             reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)
    ELSE            reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)
    ELIF            reduce using rule 13 (instruccion -> continue_state LINEANUEVA .)


state 44

    (14) instruccion -> if_state LINEANUEVA .

    PRINT           reduce using rule 14 (instruccion -> if_state LINEANUEVA .)
    PRINTLN         reduce using rule 14 (instruccion -> if_state LINEANUEVA .)
    ID              reduce using rule 14 (instruccion -> if_state LINEANUEVA .)
    DEF             reduce using rule 14 (instruccion -> if_state LINEANUEVA .)
    RETURN          reduce using rule 14 (instruccion -> if_state LINEANUEVA .)
    BREAK           reduce using rule 14 (instruccion -> if_state LINEANUEVA .)
    CONTINUE        reduce using rule 14 (instruccion -> if_state LINEANUEVA .)
    IF              reduce using rule 14 (instruccion -> if_state LINEANUEVA .)
    WHILE           reduce using rule 14 (instruccion -> if_state LINEANUEVA .)
    FOR             reduce using rule 14 (instruccion -> if_state LINEANUEVA .)
    UPPER           reduce using rule 14 (instruccion -> if_state LINEANUEVA .)
    LOWER           reduce using rule 14 (instruccion -> if_state LINEANUEVA .)
    STR             reduce using rule 14 (instruccion -> if_state LINEANUEVA .)
    FLOAT           reduce using rule 14 (instruccion -> if_state LINEANUEVA .)
    LEN             reduce using rule 14 (instruccion -> if_state LINEANUEVA .)
    $end            reduce using rule 14 (instruccion -> if_state LINEANUEVA .)
    END             reduce using rule 14 (instruccion -> if_state LINEANUEVA .)
    ELSE            reduce using rule 14 (instruccion -> if_state LINEANUEVA .)
    ELIF            reduce using rule 14 (instruccion -> if_state LINEANUEVA .)


state 45

    (15) instruccion -> while_state LINEANUEVA .

    PRINT           reduce using rule 15 (instruccion -> while_state LINEANUEVA .)
    PRINTLN         reduce using rule 15 (instruccion -> while_state LINEANUEVA .)
    ID              reduce using rule 15 (instruccion -> while_state LINEANUEVA .)
    DEF             reduce using rule 15 (instruccion -> while_state LINEANUEVA .)
    RETURN          reduce using rule 15 (instruccion -> while_state LINEANUEVA .)
    BREAK           reduce using rule 15 (instruccion -> while_state LINEANUEVA .)
    CONTINUE        reduce using rule 15 (instruccion -> while_state LINEANUEVA .)
    IF              reduce using rule 15 (instruccion -> while_state LINEANUEVA .)
    WHILE           reduce using rule 15 (instruccion -> while_state LINEANUEVA .)
    FOR             reduce using rule 15 (instruccion -> while_state LINEANUEVA .)
    UPPER           reduce using rule 15 (instruccion -> while_state LINEANUEVA .)
    LOWER           reduce using rule 15 (instruccion -> while_state LINEANUEVA .)
    STR             reduce using rule 15 (instruccion -> while_state LINEANUEVA .)
    FLOAT           reduce using rule 15 (instruccion -> while_state LINEANUEVA .)
    LEN             reduce using rule 15 (instruccion -> while_state LINEANUEVA .)
    $end            reduce using rule 15 (instruccion -> while_state LINEANUEVA .)
    END             reduce using rule 15 (instruccion -> while_state LINEANUEVA .)
    ELSE            reduce using rule 15 (instruccion -> while_state LINEANUEVA .)
    ELIF            reduce using rule 15 (instruccion -> while_state LINEANUEVA .)


state 46

    (16) instruccion -> for_state LINEANUEVA .

    PRINT           reduce using rule 16 (instruccion -> for_state LINEANUEVA .)
    PRINTLN         reduce using rule 16 (instruccion -> for_state LINEANUEVA .)
    ID              reduce using rule 16 (instruccion -> for_state LINEANUEVA .)
    DEF             reduce using rule 16 (instruccion -> for_state LINEANUEVA .)
    RETURN          reduce using rule 16 (instruccion -> for_state LINEANUEVA .)
    BREAK           reduce using rule 16 (instruccion -> for_state LINEANUEVA .)
    CONTINUE        reduce using rule 16 (instruccion -> for_state LINEANUEVA .)
    IF              reduce using rule 16 (instruccion -> for_state LINEANUEVA .)
    WHILE           reduce using rule 16 (instruccion -> for_state LINEANUEVA .)
    FOR             reduce using rule 16 (instruccion -> for_state LINEANUEVA .)
    UPPER           reduce using rule 16 (instruccion -> for_state LINEANUEVA .)
    LOWER           reduce using rule 16 (instruccion -> for_state LINEANUEVA .)
    STR             reduce using rule 16 (instruccion -> for_state LINEANUEVA .)
    FLOAT           reduce using rule 16 (instruccion -> for_state LINEANUEVA .)
    LEN             reduce using rule 16 (instruccion -> for_state LINEANUEVA .)
    $end            reduce using rule 16 (instruccion -> for_state LINEANUEVA .)
    END             reduce using rule 16 (instruccion -> for_state LINEANUEVA .)
    ELSE            reduce using rule 16 (instruccion -> for_state LINEANUEVA .)
    ELIF            reduce using rule 16 (instruccion -> for_state LINEANUEVA .)


state 47

    (17) instruccion -> nativas LINEANUEVA .

    PRINT           reduce using rule 17 (instruccion -> nativas LINEANUEVA .)
    PRINTLN         reduce using rule 17 (instruccion -> nativas LINEANUEVA .)
    ID              reduce using rule 17 (instruccion -> nativas LINEANUEVA .)
    DEF             reduce using rule 17 (instruccion -> nativas LINEANUEVA .)
    RETURN          reduce using rule 17 (instruccion -> nativas LINEANUEVA .)
    BREAK           reduce using rule 17 (instruccion -> nativas LINEANUEVA .)
    CONTINUE        reduce using rule 17 (instruccion -> nativas LINEANUEVA .)
    IF              reduce using rule 17 (instruccion -> nativas LINEANUEVA .)
    WHILE           reduce using rule 17 (instruccion -> nativas LINEANUEVA .)
    FOR             reduce using rule 17 (instruccion -> nativas LINEANUEVA .)
    UPPER           reduce using rule 17 (instruccion -> nativas LINEANUEVA .)
    LOWER           reduce using rule 17 (instruccion -> nativas LINEANUEVA .)
    STR             reduce using rule 17 (instruccion -> nativas LINEANUEVA .)
    FLOAT           reduce using rule 17 (instruccion -> nativas LINEANUEVA .)
    LEN             reduce using rule 17 (instruccion -> nativas LINEANUEVA .)
    $end            reduce using rule 17 (instruccion -> nativas LINEANUEVA .)
    END             reduce using rule 17 (instruccion -> nativas LINEANUEVA .)
    ELSE            reduce using rule 17 (instruccion -> nativas LINEANUEVA .)
    ELIF            reduce using rule 17 (instruccion -> nativas LINEANUEVA .)


state 48

    (51) print_instr -> PRINT PARIZQ . exp_list PARDER
    (63) exp_list -> . exp_list COMA expression
    (64) exp_list -> . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    exp_list                       shift and go to state 78
    expression                     shift and go to state 79
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 49

    (52) println_instr -> PRINTLN PARIZQ . exp_list PARDER
    (63) exp_list -> . exp_list COMA expression
    (64) exp_list -> . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    exp_list                       shift and go to state 80
    expression                     shift and go to state 79
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 50

    (58) asignacion_instr -> ID IGUAL . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 81
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 51

    (60) asignacion_arreglo_instr -> ID index_list . IGUAL expression
    (65) index_list -> index_list . CORCHETEIZQ expression CORCHETEDER

    IGUAL           shift and go to state 82
    CORCHETEIZQ     shift and go to state 83


state 52

    (59) definicion_asignacion_instr -> ID DOSP . tipo IGUAL expression
    (53) tipo -> . INT
    (54) tipo -> . FLOAT
    (55) tipo -> . BOOL
    (56) tipo -> . STR
    (57) tipo -> . NONE

    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    BOOL            shift and go to state 87
    STR             shift and go to state 88
    NONE            shift and go to state 89

    tipo                           shift and go to state 84

state 53

    (61) call_function -> ID PARIZQ . PARDER
    (62) call_function -> ID PARIZQ . exp_list PARDER
    (63) exp_list -> . exp_list COMA expression
    (64) exp_list -> . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    PARDER          shift and go to state 90
    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    exp_list                       shift and go to state 91
    expression                     shift and go to state 79
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 54

    (66) index_list -> CORCHETEIZQ . expression CORCHETEDER
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 92
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 55

    (68) declare_function -> DEF ID . PARIZQ dec_params PARDER DOSP statement END
    (69) declare_function -> DEF ID . PARIZQ PARDER DOSP statement END

    PARIZQ          shift and go to state 93


state 56

    (86) return_state -> RETURN expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    LINEANUEVA      reduce using rule 86 (return_state -> RETURN expression .)
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 57

    (18) expression -> MENOS . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 108
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 58

    (19) expression -> NOT . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 109
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 59

    (34) expression -> final_expression .

    MAS             reduce using rule 34 (expression -> final_expression .)
    MENOS           reduce using rule 34 (expression -> final_expression .)
    POR             reduce using rule 34 (expression -> final_expression .)
    DIVIDIDO        reduce using rule 34 (expression -> final_expression .)
    POTENCIA        reduce using rule 34 (expression -> final_expression .)
    MODULO          reduce using rule 34 (expression -> final_expression .)
    MAYQUE          reduce using rule 34 (expression -> final_expression .)
    MENQUE          reduce using rule 34 (expression -> final_expression .)
    MENIGUALQUE     reduce using rule 34 (expression -> final_expression .)
    MAYIGUALQUE     reduce using rule 34 (expression -> final_expression .)
    IGUALQUE        reduce using rule 34 (expression -> final_expression .)
    NIGUALQUE       reduce using rule 34 (expression -> final_expression .)
    OR              reduce using rule 34 (expression -> final_expression .)
    AND             reduce using rule 34 (expression -> final_expression .)
    LINEANUEVA      reduce using rule 34 (expression -> final_expression .)
    DOSP            reduce using rule 34 (expression -> final_expression .)
    PARDER          reduce using rule 34 (expression -> final_expression .)
    COMA            reduce using rule 34 (expression -> final_expression .)
    CORCHETEDER     reduce using rule 34 (expression -> final_expression .)


state 60

    (35) final_expression -> PARIZQ . expression PARDER
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 110
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 61

    (36) final_expression -> CORCHETEIZQ . exp_list CORCHETEDER
    (63) exp_list -> . exp_list COMA expression
    (64) exp_list -> . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    exp_list                       shift and go to state 111
    expression                     shift and go to state 79
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 62

    (37) final_expression -> DECIMAL .

    MAS             reduce using rule 37 (final_expression -> DECIMAL .)
    MENOS           reduce using rule 37 (final_expression -> DECIMAL .)
    POR             reduce using rule 37 (final_expression -> DECIMAL .)
    DIVIDIDO        reduce using rule 37 (final_expression -> DECIMAL .)
    POTENCIA        reduce using rule 37 (final_expression -> DECIMAL .)
    MODULO          reduce using rule 37 (final_expression -> DECIMAL .)
    MAYQUE          reduce using rule 37 (final_expression -> DECIMAL .)
    MENQUE          reduce using rule 37 (final_expression -> DECIMAL .)
    MENIGUALQUE     reduce using rule 37 (final_expression -> DECIMAL .)
    MAYIGUALQUE     reduce using rule 37 (final_expression -> DECIMAL .)
    IGUALQUE        reduce using rule 37 (final_expression -> DECIMAL .)
    NIGUALQUE       reduce using rule 37 (final_expression -> DECIMAL .)
    OR              reduce using rule 37 (final_expression -> DECIMAL .)
    AND             reduce using rule 37 (final_expression -> DECIMAL .)
    LINEANUEVA      reduce using rule 37 (final_expression -> DECIMAL .)
    DOSP            reduce using rule 37 (final_expression -> DECIMAL .)
    PARDER          reduce using rule 37 (final_expression -> DECIMAL .)
    COMA            reduce using rule 37 (final_expression -> DECIMAL .)
    CORCHETEDER     reduce using rule 37 (final_expression -> DECIMAL .)


state 63

    (38) final_expression -> ENTERO .

    MAS             reduce using rule 38 (final_expression -> ENTERO .)
    MENOS           reduce using rule 38 (final_expression -> ENTERO .)
    POR             reduce using rule 38 (final_expression -> ENTERO .)
    DIVIDIDO        reduce using rule 38 (final_expression -> ENTERO .)
    POTENCIA        reduce using rule 38 (final_expression -> ENTERO .)
    MODULO          reduce using rule 38 (final_expression -> ENTERO .)
    MAYQUE          reduce using rule 38 (final_expression -> ENTERO .)
    MENQUE          reduce using rule 38 (final_expression -> ENTERO .)
    MENIGUALQUE     reduce using rule 38 (final_expression -> ENTERO .)
    MAYIGUALQUE     reduce using rule 38 (final_expression -> ENTERO .)
    IGUALQUE        reduce using rule 38 (final_expression -> ENTERO .)
    NIGUALQUE       reduce using rule 38 (final_expression -> ENTERO .)
    OR              reduce using rule 38 (final_expression -> ENTERO .)
    AND             reduce using rule 38 (final_expression -> ENTERO .)
    LINEANUEVA      reduce using rule 38 (final_expression -> ENTERO .)
    DOSP            reduce using rule 38 (final_expression -> ENTERO .)
    PARDER          reduce using rule 38 (final_expression -> ENTERO .)
    COMA            reduce using rule 38 (final_expression -> ENTERO .)
    CORCHETEDER     reduce using rule 38 (final_expression -> ENTERO .)


state 64

    (39) final_expression -> CADENA .

    MAS             reduce using rule 39 (final_expression -> CADENA .)
    MENOS           reduce using rule 39 (final_expression -> CADENA .)
    POR             reduce using rule 39 (final_expression -> CADENA .)
    DIVIDIDO        reduce using rule 39 (final_expression -> CADENA .)
    POTENCIA        reduce using rule 39 (final_expression -> CADENA .)
    MODULO          reduce using rule 39 (final_expression -> CADENA .)
    MAYQUE          reduce using rule 39 (final_expression -> CADENA .)
    MENQUE          reduce using rule 39 (final_expression -> CADENA .)
    MENIGUALQUE     reduce using rule 39 (final_expression -> CADENA .)
    MAYIGUALQUE     reduce using rule 39 (final_expression -> CADENA .)
    IGUALQUE        reduce using rule 39 (final_expression -> CADENA .)
    NIGUALQUE       reduce using rule 39 (final_expression -> CADENA .)
    OR              reduce using rule 39 (final_expression -> CADENA .)
    AND             reduce using rule 39 (final_expression -> CADENA .)
    LINEANUEVA      reduce using rule 39 (final_expression -> CADENA .)
    DOSP            reduce using rule 39 (final_expression -> CADENA .)
    PARDER          reduce using rule 39 (final_expression -> CADENA .)
    COMA            reduce using rule 39 (final_expression -> CADENA .)
    CORCHETEDER     reduce using rule 39 (final_expression -> CADENA .)


state 65

    (40) final_expression -> ID .
    (41) final_expression -> ID . index_list
    (61) call_function -> ID . PARIZQ PARDER
    (62) call_function -> ID . PARIZQ exp_list PARDER
    (65) index_list -> . index_list CORCHETEIZQ expression CORCHETEDER
    (66) index_list -> . CORCHETEIZQ expression CORCHETEDER

    MAS             reduce using rule 40 (final_expression -> ID .)
    MENOS           reduce using rule 40 (final_expression -> ID .)
    POR             reduce using rule 40 (final_expression -> ID .)
    DIVIDIDO        reduce using rule 40 (final_expression -> ID .)
    POTENCIA        reduce using rule 40 (final_expression -> ID .)
    MODULO          reduce using rule 40 (final_expression -> ID .)
    MAYQUE          reduce using rule 40 (final_expression -> ID .)
    MENQUE          reduce using rule 40 (final_expression -> ID .)
    MENIGUALQUE     reduce using rule 40 (final_expression -> ID .)
    MAYIGUALQUE     reduce using rule 40 (final_expression -> ID .)
    IGUALQUE        reduce using rule 40 (final_expression -> ID .)
    NIGUALQUE       reduce using rule 40 (final_expression -> ID .)
    OR              reduce using rule 40 (final_expression -> ID .)
    AND             reduce using rule 40 (final_expression -> ID .)
    LINEANUEVA      reduce using rule 40 (final_expression -> ID .)
    DOSP            reduce using rule 40 (final_expression -> ID .)
    PARDER          reduce using rule 40 (final_expression -> ID .)
    COMA            reduce using rule 40 (final_expression -> ID .)
    CORCHETEDER     reduce using rule 40 (final_expression -> ID .)
    PARIZQ          shift and go to state 53
    CORCHETEIZQ     shift and go to state 54

    index_list                     shift and go to state 112

state 66

    (42) final_expression -> TRUE .

    MAS             reduce using rule 42 (final_expression -> TRUE .)
    MENOS           reduce using rule 42 (final_expression -> TRUE .)
    POR             reduce using rule 42 (final_expression -> TRUE .)
    DIVIDIDO        reduce using rule 42 (final_expression -> TRUE .)
    POTENCIA        reduce using rule 42 (final_expression -> TRUE .)
    MODULO          reduce using rule 42 (final_expression -> TRUE .)
    MAYQUE          reduce using rule 42 (final_expression -> TRUE .)
    MENQUE          reduce using rule 42 (final_expression -> TRUE .)
    MENIGUALQUE     reduce using rule 42 (final_expression -> TRUE .)
    MAYIGUALQUE     reduce using rule 42 (final_expression -> TRUE .)
    IGUALQUE        reduce using rule 42 (final_expression -> TRUE .)
    NIGUALQUE       reduce using rule 42 (final_expression -> TRUE .)
    OR              reduce using rule 42 (final_expression -> TRUE .)
    AND             reduce using rule 42 (final_expression -> TRUE .)
    LINEANUEVA      reduce using rule 42 (final_expression -> TRUE .)
    DOSP            reduce using rule 42 (final_expression -> TRUE .)
    PARDER          reduce using rule 42 (final_expression -> TRUE .)
    COMA            reduce using rule 42 (final_expression -> TRUE .)
    CORCHETEDER     reduce using rule 42 (final_expression -> TRUE .)


state 67

    (43) final_expression -> FALSE .

    MAS             reduce using rule 43 (final_expression -> FALSE .)
    MENOS           reduce using rule 43 (final_expression -> FALSE .)
    POR             reduce using rule 43 (final_expression -> FALSE .)
    DIVIDIDO        reduce using rule 43 (final_expression -> FALSE .)
    POTENCIA        reduce using rule 43 (final_expression -> FALSE .)
    MODULO          reduce using rule 43 (final_expression -> FALSE .)
    MAYQUE          reduce using rule 43 (final_expression -> FALSE .)
    MENQUE          reduce using rule 43 (final_expression -> FALSE .)
    MENIGUALQUE     reduce using rule 43 (final_expression -> FALSE .)
    MAYIGUALQUE     reduce using rule 43 (final_expression -> FALSE .)
    IGUALQUE        reduce using rule 43 (final_expression -> FALSE .)
    NIGUALQUE       reduce using rule 43 (final_expression -> FALSE .)
    OR              reduce using rule 43 (final_expression -> FALSE .)
    AND             reduce using rule 43 (final_expression -> FALSE .)
    LINEANUEVA      reduce using rule 43 (final_expression -> FALSE .)
    DOSP            reduce using rule 43 (final_expression -> FALSE .)
    PARDER          reduce using rule 43 (final_expression -> FALSE .)
    COMA            reduce using rule 43 (final_expression -> FALSE .)
    CORCHETEDER     reduce using rule 43 (final_expression -> FALSE .)


state 68

    (44) final_expression -> call_function .

    MAS             reduce using rule 44 (final_expression -> call_function .)
    MENOS           reduce using rule 44 (final_expression -> call_function .)
    POR             reduce using rule 44 (final_expression -> call_function .)
    DIVIDIDO        reduce using rule 44 (final_expression -> call_function .)
    POTENCIA        reduce using rule 44 (final_expression -> call_function .)
    MODULO          reduce using rule 44 (final_expression -> call_function .)
    MAYQUE          reduce using rule 44 (final_expression -> call_function .)
    MENQUE          reduce using rule 44 (final_expression -> call_function .)
    MENIGUALQUE     reduce using rule 44 (final_expression -> call_function .)
    MAYIGUALQUE     reduce using rule 44 (final_expression -> call_function .)
    IGUALQUE        reduce using rule 44 (final_expression -> call_function .)
    NIGUALQUE       reduce using rule 44 (final_expression -> call_function .)
    OR              reduce using rule 44 (final_expression -> call_function .)
    AND             reduce using rule 44 (final_expression -> call_function .)
    LINEANUEVA      reduce using rule 44 (final_expression -> call_function .)
    DOSP            reduce using rule 44 (final_expression -> call_function .)
    PARDER          reduce using rule 44 (final_expression -> call_function .)
    COMA            reduce using rule 44 (final_expression -> call_function .)
    CORCHETEDER     reduce using rule 44 (final_expression -> call_function .)


state 69

    (45) final_expression -> nativas .

    MAS             reduce using rule 45 (final_expression -> nativas .)
    MENOS           reduce using rule 45 (final_expression -> nativas .)
    POR             reduce using rule 45 (final_expression -> nativas .)
    DIVIDIDO        reduce using rule 45 (final_expression -> nativas .)
    POTENCIA        reduce using rule 45 (final_expression -> nativas .)
    MODULO          reduce using rule 45 (final_expression -> nativas .)
    MAYQUE          reduce using rule 45 (final_expression -> nativas .)
    MENQUE          reduce using rule 45 (final_expression -> nativas .)
    MENIGUALQUE     reduce using rule 45 (final_expression -> nativas .)
    MAYIGUALQUE     reduce using rule 45 (final_expression -> nativas .)
    IGUALQUE        reduce using rule 45 (final_expression -> nativas .)
    NIGUALQUE       reduce using rule 45 (final_expression -> nativas .)
    OR              reduce using rule 45 (final_expression -> nativas .)
    AND             reduce using rule 45 (final_expression -> nativas .)
    LINEANUEVA      reduce using rule 45 (final_expression -> nativas .)
    DOSP            reduce using rule 45 (final_expression -> nativas .)
    PARDER          reduce using rule 45 (final_expression -> nativas .)
    COMA            reduce using rule 45 (final_expression -> nativas .)
    CORCHETEDER     reduce using rule 45 (final_expression -> nativas .)


state 70

    (74) if_state -> IF expression . DOSP statement END
    (75) if_state -> IF expression . DOSP statement ELSE DOSP statement END
    (76) if_state -> IF expression . DOSP statement else_if_list END
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    DOSP            shift and go to state 113
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 71

    (80) while_state -> WHILE expression . DOSP statement END
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    DOSP            shift and go to state 114
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 72

    (81) for_state -> FOR ID . IN expression DOSP expression DOSP statement END
    (82) for_state -> FOR ID . IN expression DOSP statement END

    IN              shift and go to state 115


state 73

    (46) nativas -> UPPER PARIZQ . expression PARDER
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 116
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 74

    (47) nativas -> LOWER PARIZQ . expression PARDER
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 117
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 75

    (48) nativas -> STR PARIZQ . expression PARDER
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 118
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 76

    (49) nativas -> FLOAT PARIZQ . expression PARDER
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 119
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 77

    (50) nativas -> LEN PARIZQ . expression PARDER
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 120
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 78

    (51) print_instr -> PRINT PARIZQ exp_list . PARDER
    (63) exp_list -> exp_list . COMA expression

    PARDER          shift and go to state 121
    COMA            shift and go to state 122


state 79

    (64) exp_list -> expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    PARDER          reduce using rule 64 (exp_list -> expression .)
    COMA            reduce using rule 64 (exp_list -> expression .)
    CORCHETEDER     reduce using rule 64 (exp_list -> expression .)
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 80

    (52) println_instr -> PRINTLN PARIZQ exp_list . PARDER
    (63) exp_list -> exp_list . COMA expression

    PARDER          shift and go to state 123
    COMA            shift and go to state 122


state 81

    (58) asignacion_instr -> ID IGUAL expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    LINEANUEVA      reduce using rule 58 (asignacion_instr -> ID IGUAL expression .)
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 82

    (60) asignacion_arreglo_instr -> ID index_list IGUAL . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 124
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 83

    (65) index_list -> index_list CORCHETEIZQ . expression CORCHETEDER
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 125
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 84

    (59) definicion_asignacion_instr -> ID DOSP tipo . IGUAL expression

    IGUAL           shift and go to state 126


state 85

    (53) tipo -> INT .

    IGUAL           reduce using rule 53 (tipo -> INT .)
    PARDER          reduce using rule 53 (tipo -> INT .)
    COMA            reduce using rule 53 (tipo -> INT .)


state 86

    (54) tipo -> FLOAT .

    IGUAL           reduce using rule 54 (tipo -> FLOAT .)
    PARDER          reduce using rule 54 (tipo -> FLOAT .)
    COMA            reduce using rule 54 (tipo -> FLOAT .)


state 87

    (55) tipo -> BOOL .

    IGUAL           reduce using rule 55 (tipo -> BOOL .)
    PARDER          reduce using rule 55 (tipo -> BOOL .)
    COMA            reduce using rule 55 (tipo -> BOOL .)


state 88

    (56) tipo -> STR .

    IGUAL           reduce using rule 56 (tipo -> STR .)
    PARDER          reduce using rule 56 (tipo -> STR .)
    COMA            reduce using rule 56 (tipo -> STR .)


state 89

    (57) tipo -> NONE .

    IGUAL           reduce using rule 57 (tipo -> NONE .)
    PARDER          reduce using rule 57 (tipo -> NONE .)
    COMA            reduce using rule 57 (tipo -> NONE .)


state 90

    (61) call_function -> ID PARIZQ PARDER .

    LINEANUEVA      reduce using rule 61 (call_function -> ID PARIZQ PARDER .)
    MAS             reduce using rule 61 (call_function -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 61 (call_function -> ID PARIZQ PARDER .)
    POR             reduce using rule 61 (call_function -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 61 (call_function -> ID PARIZQ PARDER .)
    POTENCIA        reduce using rule 61 (call_function -> ID PARIZQ PARDER .)
    MODULO          reduce using rule 61 (call_function -> ID PARIZQ PARDER .)
    MAYQUE          reduce using rule 61 (call_function -> ID PARIZQ PARDER .)
    MENQUE          reduce using rule 61 (call_function -> ID PARIZQ PARDER .)
    MENIGUALQUE     reduce using rule 61 (call_function -> ID PARIZQ PARDER .)
    MAYIGUALQUE     reduce using rule 61 (call_function -> ID PARIZQ PARDER .)
    IGUALQUE        reduce using rule 61 (call_function -> ID PARIZQ PARDER .)
    NIGUALQUE       reduce using rule 61 (call_function -> ID PARIZQ PARDER .)
    OR              reduce using rule 61 (call_function -> ID PARIZQ PARDER .)
    AND             reduce using rule 61 (call_function -> ID PARIZQ PARDER .)
    DOSP            reduce using rule 61 (call_function -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 61 (call_function -> ID PARIZQ PARDER .)
    COMA            reduce using rule 61 (call_function -> ID PARIZQ PARDER .)
    CORCHETEDER     reduce using rule 61 (call_function -> ID PARIZQ PARDER .)


state 91

    (62) call_function -> ID PARIZQ exp_list . PARDER
    (63) exp_list -> exp_list . COMA expression

    PARDER          shift and go to state 127
    COMA            shift and go to state 122


state 92

    (66) index_list -> CORCHETEIZQ expression . CORCHETEDER
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    CORCHETEDER     shift and go to state 128
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 93

    (68) declare_function -> DEF ID PARIZQ . dec_params PARDER DOSP statement END
    (69) declare_function -> DEF ID PARIZQ . PARDER DOSP statement END
    (70) dec_params -> . dec_params COMA ID DOSP tipo
    (71) dec_params -> . dec_params COMA ID
    (72) dec_params -> . ID DOSP tipo
    (73) dec_params -> . ID

    PARDER          shift and go to state 131
    ID              shift and go to state 129

    dec_params                     shift and go to state 130

state 94

    (20) expression -> expression MAS . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 132
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 95

    (21) expression -> expression MENOS . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 133
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 96

    (22) expression -> expression POR . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 134
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 97

    (23) expression -> expression DIVIDIDO . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 135
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 98

    (24) expression -> expression POTENCIA . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 136
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 99

    (25) expression -> expression MODULO . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 137
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 100

    (26) expression -> expression MAYQUE . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 138
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 101

    (27) expression -> expression MENQUE . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 139
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 102

    (28) expression -> expression MENIGUALQUE . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 140
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 103

    (29) expression -> expression MAYIGUALQUE . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 141
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 104

    (30) expression -> expression IGUALQUE . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 142
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 105

    (31) expression -> expression NIGUALQUE . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 143
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 106

    (32) expression -> expression OR . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 144
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 107

    (33) expression -> expression AND . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 145
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 108

    (18) expression -> MENOS expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    MAS             reduce using rule 18 (expression -> MENOS expression .)
    MENOS           reduce using rule 18 (expression -> MENOS expression .)
    POR             reduce using rule 18 (expression -> MENOS expression .)
    DIVIDIDO        reduce using rule 18 (expression -> MENOS expression .)
    POTENCIA        reduce using rule 18 (expression -> MENOS expression .)
    MODULO          reduce using rule 18 (expression -> MENOS expression .)
    MAYQUE          reduce using rule 18 (expression -> MENOS expression .)
    MENQUE          reduce using rule 18 (expression -> MENOS expression .)
    MENIGUALQUE     reduce using rule 18 (expression -> MENOS expression .)
    MAYIGUALQUE     reduce using rule 18 (expression -> MENOS expression .)
    IGUALQUE        reduce using rule 18 (expression -> MENOS expression .)
    NIGUALQUE       reduce using rule 18 (expression -> MENOS expression .)
    OR              reduce using rule 18 (expression -> MENOS expression .)
    AND             reduce using rule 18 (expression -> MENOS expression .)
    LINEANUEVA      reduce using rule 18 (expression -> MENOS expression .)
    DOSP            reduce using rule 18 (expression -> MENOS expression .)
    PARDER          reduce using rule 18 (expression -> MENOS expression .)
    COMA            reduce using rule 18 (expression -> MENOS expression .)
    CORCHETEDER     reduce using rule 18 (expression -> MENOS expression .)

  ! MAS             [ shift and go to state 94 ]
  ! MENOS           [ shift and go to state 95 ]
  ! POR             [ shift and go to state 96 ]
  ! DIVIDIDO        [ shift and go to state 97 ]
  ! POTENCIA        [ shift and go to state 98 ]
  ! MODULO          [ shift and go to state 99 ]
  ! MAYQUE          [ shift and go to state 100 ]
  ! MENQUE          [ shift and go to state 101 ]
  ! MENIGUALQUE     [ shift and go to state 102 ]
  ! MAYIGUALQUE     [ shift and go to state 103 ]
  ! IGUALQUE        [ shift and go to state 104 ]
  ! NIGUALQUE       [ shift and go to state 105 ]
  ! OR              [ shift and go to state 106 ]
  ! AND             [ shift and go to state 107 ]


state 109

    (19) expression -> NOT expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    MAS             reduce using rule 19 (expression -> NOT expression .)
    MENOS           reduce using rule 19 (expression -> NOT expression .)
    POR             reduce using rule 19 (expression -> NOT expression .)
    DIVIDIDO        reduce using rule 19 (expression -> NOT expression .)
    POTENCIA        reduce using rule 19 (expression -> NOT expression .)
    MODULO          reduce using rule 19 (expression -> NOT expression .)
    MAYQUE          reduce using rule 19 (expression -> NOT expression .)
    MENQUE          reduce using rule 19 (expression -> NOT expression .)
    MENIGUALQUE     reduce using rule 19 (expression -> NOT expression .)
    MAYIGUALQUE     reduce using rule 19 (expression -> NOT expression .)
    IGUALQUE        reduce using rule 19 (expression -> NOT expression .)
    NIGUALQUE       reduce using rule 19 (expression -> NOT expression .)
    OR              reduce using rule 19 (expression -> NOT expression .)
    AND             reduce using rule 19 (expression -> NOT expression .)
    LINEANUEVA      reduce using rule 19 (expression -> NOT expression .)
    DOSP            reduce using rule 19 (expression -> NOT expression .)
    PARDER          reduce using rule 19 (expression -> NOT expression .)
    COMA            reduce using rule 19 (expression -> NOT expression .)
    CORCHETEDER     reduce using rule 19 (expression -> NOT expression .)

  ! MAS             [ shift and go to state 94 ]
  ! MENOS           [ shift and go to state 95 ]
  ! POR             [ shift and go to state 96 ]
  ! DIVIDIDO        [ shift and go to state 97 ]
  ! POTENCIA        [ shift and go to state 98 ]
  ! MODULO          [ shift and go to state 99 ]
  ! MAYQUE          [ shift and go to state 100 ]
  ! MENQUE          [ shift and go to state 101 ]
  ! MENIGUALQUE     [ shift and go to state 102 ]
  ! MAYIGUALQUE     [ shift and go to state 103 ]
  ! IGUALQUE        [ shift and go to state 104 ]
  ! NIGUALQUE       [ shift and go to state 105 ]
  ! OR              [ shift and go to state 106 ]
  ! AND             [ shift and go to state 107 ]


state 110

    (35) final_expression -> PARIZQ expression . PARDER
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    PARDER          shift and go to state 146
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 111

    (36) final_expression -> CORCHETEIZQ exp_list . CORCHETEDER
    (63) exp_list -> exp_list . COMA expression

    CORCHETEDER     shift and go to state 147
    COMA            shift and go to state 122


state 112

    (41) final_expression -> ID index_list .
    (65) index_list -> index_list . CORCHETEIZQ expression CORCHETEDER

    MAS             reduce using rule 41 (final_expression -> ID index_list .)
    MENOS           reduce using rule 41 (final_expression -> ID index_list .)
    POR             reduce using rule 41 (final_expression -> ID index_list .)
    DIVIDIDO        reduce using rule 41 (final_expression -> ID index_list .)
    POTENCIA        reduce using rule 41 (final_expression -> ID index_list .)
    MODULO          reduce using rule 41 (final_expression -> ID index_list .)
    MAYQUE          reduce using rule 41 (final_expression -> ID index_list .)
    MENQUE          reduce using rule 41 (final_expression -> ID index_list .)
    MENIGUALQUE     reduce using rule 41 (final_expression -> ID index_list .)
    MAYIGUALQUE     reduce using rule 41 (final_expression -> ID index_list .)
    IGUALQUE        reduce using rule 41 (final_expression -> ID index_list .)
    NIGUALQUE       reduce using rule 41 (final_expression -> ID index_list .)
    OR              reduce using rule 41 (final_expression -> ID index_list .)
    AND             reduce using rule 41 (final_expression -> ID index_list .)
    LINEANUEVA      reduce using rule 41 (final_expression -> ID index_list .)
    DOSP            reduce using rule 41 (final_expression -> ID index_list .)
    PARDER          reduce using rule 41 (final_expression -> ID index_list .)
    COMA            reduce using rule 41 (final_expression -> ID index_list .)
    CORCHETEDER     reduce using rule 41 (final_expression -> ID index_list .)
    CORCHETEIZQ     shift and go to state 83


state 113

    (74) if_state -> IF expression DOSP . statement END
    (75) if_state -> IF expression DOSP . statement ELSE DOSP statement END
    (76) if_state -> IF expression DOSP . statement else_if_list END
    (67) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr LINEANUEVA
    (5) instruccion -> . println_instr LINEANUEVA
    (6) instruccion -> . asignacion_instr LINEANUEVA
    (7) instruccion -> . asignacion_arreglo_instr LINEANUEVA
    (8) instruccion -> . definicion_asignacion_instr LINEANUEVA
    (9) instruccion -> . call_function LINEANUEVA
    (10) instruccion -> . declare_function LINEANUEVA
    (11) instruccion -> . return_state LINEANUEVA
    (12) instruccion -> . break_state LINEANUEVA
    (13) instruccion -> . continue_state LINEANUEVA
    (14) instruccion -> . if_state LINEANUEVA
    (15) instruccion -> . while_state LINEANUEVA
    (16) instruccion -> . for_state LINEANUEVA
    (17) instruccion -> . nativas LINEANUEVA
    (51) print_instr -> . PRINT PARIZQ exp_list PARDER
    (52) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (58) asignacion_instr -> . ID IGUAL expression
    (60) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (59) definicion_asignacion_instr -> . ID DOSP tipo IGUAL expression
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (68) declare_function -> . DEF ID PARIZQ dec_params PARDER DOSP statement END
    (69) declare_function -> . DEF ID PARIZQ PARDER DOSP statement END
    (85) return_state -> . RETURN
    (86) return_state -> . RETURN expression
    (83) break_state -> . BREAK
    (84) continue_state -> . CONTINUE
    (74) if_state -> . IF expression DOSP statement END
    (75) if_state -> . IF expression DOSP statement ELSE DOSP statement END
    (76) if_state -> . IF expression DOSP statement else_if_list END
    (80) while_state -> . WHILE expression DOSP statement END
    (81) for_state -> . FOR ID IN expression DOSP expression DOSP statement END
    (82) for_state -> . FOR ID IN expression DOSP statement END
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 20
    DEF             shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    statement                      shift and go to state 148
    instrucciones                  shift and go to state 149
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    asignacion_instr               shift and go to state 6
    asignacion_arreglo_instr       shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16
    nativas                        shift and go to state 17

state 114

    (80) while_state -> WHILE expression DOSP . statement END
    (67) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr LINEANUEVA
    (5) instruccion -> . println_instr LINEANUEVA
    (6) instruccion -> . asignacion_instr LINEANUEVA
    (7) instruccion -> . asignacion_arreglo_instr LINEANUEVA
    (8) instruccion -> . definicion_asignacion_instr LINEANUEVA
    (9) instruccion -> . call_function LINEANUEVA
    (10) instruccion -> . declare_function LINEANUEVA
    (11) instruccion -> . return_state LINEANUEVA
    (12) instruccion -> . break_state LINEANUEVA
    (13) instruccion -> . continue_state LINEANUEVA
    (14) instruccion -> . if_state LINEANUEVA
    (15) instruccion -> . while_state LINEANUEVA
    (16) instruccion -> . for_state LINEANUEVA
    (17) instruccion -> . nativas LINEANUEVA
    (51) print_instr -> . PRINT PARIZQ exp_list PARDER
    (52) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (58) asignacion_instr -> . ID IGUAL expression
    (60) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (59) definicion_asignacion_instr -> . ID DOSP tipo IGUAL expression
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (68) declare_function -> . DEF ID PARIZQ dec_params PARDER DOSP statement END
    (69) declare_function -> . DEF ID PARIZQ PARDER DOSP statement END
    (85) return_state -> . RETURN
    (86) return_state -> . RETURN expression
    (83) break_state -> . BREAK
    (84) continue_state -> . CONTINUE
    (74) if_state -> . IF expression DOSP statement END
    (75) if_state -> . IF expression DOSP statement ELSE DOSP statement END
    (76) if_state -> . IF expression DOSP statement else_if_list END
    (80) while_state -> . WHILE expression DOSP statement END
    (81) for_state -> . FOR ID IN expression DOSP expression DOSP statement END
    (82) for_state -> . FOR ID IN expression DOSP statement END
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 20
    DEF             shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    statement                      shift and go to state 150
    instrucciones                  shift and go to state 149
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    asignacion_instr               shift and go to state 6
    asignacion_arreglo_instr       shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16
    nativas                        shift and go to state 17

state 115

    (81) for_state -> FOR ID IN . expression DOSP expression DOSP statement END
    (82) for_state -> FOR ID IN . expression DOSP statement END
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 151
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 116

    (46) nativas -> UPPER PARIZQ expression . PARDER
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    PARDER          shift and go to state 152
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 117

    (47) nativas -> LOWER PARIZQ expression . PARDER
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    PARDER          shift and go to state 153
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 118

    (48) nativas -> STR PARIZQ expression . PARDER
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    PARDER          shift and go to state 154
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 119

    (49) nativas -> FLOAT PARIZQ expression . PARDER
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    PARDER          shift and go to state 155
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 120

    (50) nativas -> LEN PARIZQ expression . PARDER
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    PARDER          shift and go to state 156
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 121

    (51) print_instr -> PRINT PARIZQ exp_list PARDER .

    LINEANUEVA      reduce using rule 51 (print_instr -> PRINT PARIZQ exp_list PARDER .)


state 122

    (63) exp_list -> exp_list COMA . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 157
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 123

    (52) println_instr -> PRINTLN PARIZQ exp_list PARDER .

    LINEANUEVA      reduce using rule 52 (println_instr -> PRINTLN PARIZQ exp_list PARDER .)


state 124

    (60) asignacion_arreglo_instr -> ID index_list IGUAL expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    LINEANUEVA      reduce using rule 60 (asignacion_arreglo_instr -> ID index_list IGUAL expression .)
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 125

    (65) index_list -> index_list CORCHETEIZQ expression . CORCHETEDER
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    CORCHETEDER     shift and go to state 158
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 126

    (59) definicion_asignacion_instr -> ID DOSP tipo IGUAL . expression
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 159
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 127

    (62) call_function -> ID PARIZQ exp_list PARDER .

    LINEANUEVA      reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)
    MAS             reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)
    MENOS           reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)
    POR             reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)
    DIVIDIDO        reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)
    POTENCIA        reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)
    MODULO          reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)
    MAYQUE          reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)
    MENQUE          reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)
    MENIGUALQUE     reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)
    MAYIGUALQUE     reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)
    IGUALQUE        reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)
    NIGUALQUE       reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)
    OR              reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)
    AND             reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)
    DOSP            reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)
    PARDER          reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)
    COMA            reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)
    CORCHETEDER     reduce using rule 62 (call_function -> ID PARIZQ exp_list PARDER .)


state 128

    (66) index_list -> CORCHETEIZQ expression CORCHETEDER .

    IGUAL           reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    CORCHETEIZQ     reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    MAS             reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    MENOS           reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    POR             reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    DIVIDIDO        reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    POTENCIA        reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    MODULO          reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    MAYQUE          reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    MENQUE          reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    MENIGUALQUE     reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    MAYIGUALQUE     reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    IGUALQUE        reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    NIGUALQUE       reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    OR              reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    AND             reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    LINEANUEVA      reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    DOSP            reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    PARDER          reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    COMA            reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    CORCHETEDER     reduce using rule 66 (index_list -> CORCHETEIZQ expression CORCHETEDER .)


state 129

    (72) dec_params -> ID . DOSP tipo
    (73) dec_params -> ID .

    DOSP            shift and go to state 160
    PARDER          reduce using rule 73 (dec_params -> ID .)
    COMA            reduce using rule 73 (dec_params -> ID .)


state 130

    (68) declare_function -> DEF ID PARIZQ dec_params . PARDER DOSP statement END
    (70) dec_params -> dec_params . COMA ID DOSP tipo
    (71) dec_params -> dec_params . COMA ID

    PARDER          shift and go to state 161
    COMA            shift and go to state 162


state 131

    (69) declare_function -> DEF ID PARIZQ PARDER . DOSP statement END

    DOSP            shift and go to state 163


state 132

    (20) expression -> expression MAS expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    MAS             reduce using rule 20 (expression -> expression MAS expression .)
    MENOS           reduce using rule 20 (expression -> expression MAS expression .)
    MAYQUE          reduce using rule 20 (expression -> expression MAS expression .)
    MENQUE          reduce using rule 20 (expression -> expression MAS expression .)
    MENIGUALQUE     reduce using rule 20 (expression -> expression MAS expression .)
    MAYIGUALQUE     reduce using rule 20 (expression -> expression MAS expression .)
    IGUALQUE        reduce using rule 20 (expression -> expression MAS expression .)
    NIGUALQUE       reduce using rule 20 (expression -> expression MAS expression .)
    OR              reduce using rule 20 (expression -> expression MAS expression .)
    AND             reduce using rule 20 (expression -> expression MAS expression .)
    LINEANUEVA      reduce using rule 20 (expression -> expression MAS expression .)
    DOSP            reduce using rule 20 (expression -> expression MAS expression .)
    PARDER          reduce using rule 20 (expression -> expression MAS expression .)
    COMA            reduce using rule 20 (expression -> expression MAS expression .)
    CORCHETEDER     reduce using rule 20 (expression -> expression MAS expression .)
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99

  ! POR             [ reduce using rule 20 (expression -> expression MAS expression .) ]
  ! DIVIDIDO        [ reduce using rule 20 (expression -> expression MAS expression .) ]
  ! POTENCIA        [ reduce using rule 20 (expression -> expression MAS expression .) ]
  ! MODULO          [ reduce using rule 20 (expression -> expression MAS expression .) ]
  ! MAS             [ shift and go to state 94 ]
  ! MENOS           [ shift and go to state 95 ]
  ! MAYQUE          [ shift and go to state 100 ]
  ! MENQUE          [ shift and go to state 101 ]
  ! MENIGUALQUE     [ shift and go to state 102 ]
  ! MAYIGUALQUE     [ shift and go to state 103 ]
  ! IGUALQUE        [ shift and go to state 104 ]
  ! NIGUALQUE       [ shift and go to state 105 ]
  ! OR              [ shift and go to state 106 ]
  ! AND             [ shift and go to state 107 ]


state 133

    (21) expression -> expression MENOS expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    MAS             reduce using rule 21 (expression -> expression MENOS expression .)
    MENOS           reduce using rule 21 (expression -> expression MENOS expression .)
    MAYQUE          reduce using rule 21 (expression -> expression MENOS expression .)
    MENQUE          reduce using rule 21 (expression -> expression MENOS expression .)
    MENIGUALQUE     reduce using rule 21 (expression -> expression MENOS expression .)
    MAYIGUALQUE     reduce using rule 21 (expression -> expression MENOS expression .)
    IGUALQUE        reduce using rule 21 (expression -> expression MENOS expression .)
    NIGUALQUE       reduce using rule 21 (expression -> expression MENOS expression .)
    OR              reduce using rule 21 (expression -> expression MENOS expression .)
    AND             reduce using rule 21 (expression -> expression MENOS expression .)
    LINEANUEVA      reduce using rule 21 (expression -> expression MENOS expression .)
    DOSP            reduce using rule 21 (expression -> expression MENOS expression .)
    PARDER          reduce using rule 21 (expression -> expression MENOS expression .)
    COMA            reduce using rule 21 (expression -> expression MENOS expression .)
    CORCHETEDER     reduce using rule 21 (expression -> expression MENOS expression .)
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99

  ! POR             [ reduce using rule 21 (expression -> expression MENOS expression .) ]
  ! DIVIDIDO        [ reduce using rule 21 (expression -> expression MENOS expression .) ]
  ! POTENCIA        [ reduce using rule 21 (expression -> expression MENOS expression .) ]
  ! MODULO          [ reduce using rule 21 (expression -> expression MENOS expression .) ]
  ! MAS             [ shift and go to state 94 ]
  ! MENOS           [ shift and go to state 95 ]
  ! MAYQUE          [ shift and go to state 100 ]
  ! MENQUE          [ shift and go to state 101 ]
  ! MENIGUALQUE     [ shift and go to state 102 ]
  ! MAYIGUALQUE     [ shift and go to state 103 ]
  ! IGUALQUE        [ shift and go to state 104 ]
  ! NIGUALQUE       [ shift and go to state 105 ]
  ! OR              [ shift and go to state 106 ]
  ! AND             [ shift and go to state 107 ]


state 134

    (22) expression -> expression POR expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    MAS             reduce using rule 22 (expression -> expression POR expression .)
    MENOS           reduce using rule 22 (expression -> expression POR expression .)
    POR             reduce using rule 22 (expression -> expression POR expression .)
    DIVIDIDO        reduce using rule 22 (expression -> expression POR expression .)
    MODULO          reduce using rule 22 (expression -> expression POR expression .)
    MAYQUE          reduce using rule 22 (expression -> expression POR expression .)
    MENQUE          reduce using rule 22 (expression -> expression POR expression .)
    MENIGUALQUE     reduce using rule 22 (expression -> expression POR expression .)
    MAYIGUALQUE     reduce using rule 22 (expression -> expression POR expression .)
    IGUALQUE        reduce using rule 22 (expression -> expression POR expression .)
    NIGUALQUE       reduce using rule 22 (expression -> expression POR expression .)
    OR              reduce using rule 22 (expression -> expression POR expression .)
    AND             reduce using rule 22 (expression -> expression POR expression .)
    LINEANUEVA      reduce using rule 22 (expression -> expression POR expression .)
    DOSP            reduce using rule 22 (expression -> expression POR expression .)
    PARDER          reduce using rule 22 (expression -> expression POR expression .)
    COMA            reduce using rule 22 (expression -> expression POR expression .)
    CORCHETEDER     reduce using rule 22 (expression -> expression POR expression .)
    POTENCIA        shift and go to state 98

  ! POTENCIA        [ reduce using rule 22 (expression -> expression POR expression .) ]
  ! MAS             [ shift and go to state 94 ]
  ! MENOS           [ shift and go to state 95 ]
  ! POR             [ shift and go to state 96 ]
  ! DIVIDIDO        [ shift and go to state 97 ]
  ! MODULO          [ shift and go to state 99 ]
  ! MAYQUE          [ shift and go to state 100 ]
  ! MENQUE          [ shift and go to state 101 ]
  ! MENIGUALQUE     [ shift and go to state 102 ]
  ! MAYIGUALQUE     [ shift and go to state 103 ]
  ! IGUALQUE        [ shift and go to state 104 ]
  ! NIGUALQUE       [ shift and go to state 105 ]
  ! OR              [ shift and go to state 106 ]
  ! AND             [ shift and go to state 107 ]


state 135

    (23) expression -> expression DIVIDIDO expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    MAS             reduce using rule 23 (expression -> expression DIVIDIDO expression .)
    MENOS           reduce using rule 23 (expression -> expression DIVIDIDO expression .)
    POR             reduce using rule 23 (expression -> expression DIVIDIDO expression .)
    DIVIDIDO        reduce using rule 23 (expression -> expression DIVIDIDO expression .)
    MODULO          reduce using rule 23 (expression -> expression DIVIDIDO expression .)
    MAYQUE          reduce using rule 23 (expression -> expression DIVIDIDO expression .)
    MENQUE          reduce using rule 23 (expression -> expression DIVIDIDO expression .)
    MENIGUALQUE     reduce using rule 23 (expression -> expression DIVIDIDO expression .)
    MAYIGUALQUE     reduce using rule 23 (expression -> expression DIVIDIDO expression .)
    IGUALQUE        reduce using rule 23 (expression -> expression DIVIDIDO expression .)
    NIGUALQUE       reduce using rule 23 (expression -> expression DIVIDIDO expression .)
    OR              reduce using rule 23 (expression -> expression DIVIDIDO expression .)
    AND             reduce using rule 23 (expression -> expression DIVIDIDO expression .)
    LINEANUEVA      reduce using rule 23 (expression -> expression DIVIDIDO expression .)
    DOSP            reduce using rule 23 (expression -> expression DIVIDIDO expression .)
    PARDER          reduce using rule 23 (expression -> expression DIVIDIDO expression .)
    COMA            reduce using rule 23 (expression -> expression DIVIDIDO expression .)
    CORCHETEDER     reduce using rule 23 (expression -> expression DIVIDIDO expression .)
    POTENCIA        shift and go to state 98

  ! POTENCIA        [ reduce using rule 23 (expression -> expression DIVIDIDO expression .) ]
  ! MAS             [ shift and go to state 94 ]
  ! MENOS           [ shift and go to state 95 ]
  ! POR             [ shift and go to state 96 ]
  ! DIVIDIDO        [ shift and go to state 97 ]
  ! MODULO          [ shift and go to state 99 ]
  ! MAYQUE          [ shift and go to state 100 ]
  ! MENQUE          [ shift and go to state 101 ]
  ! MENIGUALQUE     [ shift and go to state 102 ]
  ! MAYIGUALQUE     [ shift and go to state 103 ]
  ! IGUALQUE        [ shift and go to state 104 ]
  ! NIGUALQUE       [ shift and go to state 105 ]
  ! OR              [ shift and go to state 106 ]
  ! AND             [ shift and go to state 107 ]


state 136

    (24) expression -> expression POTENCIA expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    MAS             reduce using rule 24 (expression -> expression POTENCIA expression .)
    MENOS           reduce using rule 24 (expression -> expression POTENCIA expression .)
    POR             reduce using rule 24 (expression -> expression POTENCIA expression .)
    DIVIDIDO        reduce using rule 24 (expression -> expression POTENCIA expression .)
    POTENCIA        reduce using rule 24 (expression -> expression POTENCIA expression .)
    MODULO          reduce using rule 24 (expression -> expression POTENCIA expression .)
    MAYQUE          reduce using rule 24 (expression -> expression POTENCIA expression .)
    MENQUE          reduce using rule 24 (expression -> expression POTENCIA expression .)
    MENIGUALQUE     reduce using rule 24 (expression -> expression POTENCIA expression .)
    MAYIGUALQUE     reduce using rule 24 (expression -> expression POTENCIA expression .)
    IGUALQUE        reduce using rule 24 (expression -> expression POTENCIA expression .)
    NIGUALQUE       reduce using rule 24 (expression -> expression POTENCIA expression .)
    OR              reduce using rule 24 (expression -> expression POTENCIA expression .)
    AND             reduce using rule 24 (expression -> expression POTENCIA expression .)
    LINEANUEVA      reduce using rule 24 (expression -> expression POTENCIA expression .)
    DOSP            reduce using rule 24 (expression -> expression POTENCIA expression .)
    PARDER          reduce using rule 24 (expression -> expression POTENCIA expression .)
    COMA            reduce using rule 24 (expression -> expression POTENCIA expression .)
    CORCHETEDER     reduce using rule 24 (expression -> expression POTENCIA expression .)

  ! MAS             [ shift and go to state 94 ]
  ! MENOS           [ shift and go to state 95 ]
  ! POR             [ shift and go to state 96 ]
  ! DIVIDIDO        [ shift and go to state 97 ]
  ! POTENCIA        [ shift and go to state 98 ]
  ! MODULO          [ shift and go to state 99 ]
  ! MAYQUE          [ shift and go to state 100 ]
  ! MENQUE          [ shift and go to state 101 ]
  ! MENIGUALQUE     [ shift and go to state 102 ]
  ! MAYIGUALQUE     [ shift and go to state 103 ]
  ! IGUALQUE        [ shift and go to state 104 ]
  ! NIGUALQUE       [ shift and go to state 105 ]
  ! OR              [ shift and go to state 106 ]
  ! AND             [ shift and go to state 107 ]


state 137

    (25) expression -> expression MODULO expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    MAS             reduce using rule 25 (expression -> expression MODULO expression .)
    MENOS           reduce using rule 25 (expression -> expression MODULO expression .)
    POR             reduce using rule 25 (expression -> expression MODULO expression .)
    DIVIDIDO        reduce using rule 25 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 25 (expression -> expression MODULO expression .)
    MAYQUE          reduce using rule 25 (expression -> expression MODULO expression .)
    MENQUE          reduce using rule 25 (expression -> expression MODULO expression .)
    MENIGUALQUE     reduce using rule 25 (expression -> expression MODULO expression .)
    MAYIGUALQUE     reduce using rule 25 (expression -> expression MODULO expression .)
    IGUALQUE        reduce using rule 25 (expression -> expression MODULO expression .)
    NIGUALQUE       reduce using rule 25 (expression -> expression MODULO expression .)
    OR              reduce using rule 25 (expression -> expression MODULO expression .)
    AND             reduce using rule 25 (expression -> expression MODULO expression .)
    LINEANUEVA      reduce using rule 25 (expression -> expression MODULO expression .)
    DOSP            reduce using rule 25 (expression -> expression MODULO expression .)
    PARDER          reduce using rule 25 (expression -> expression MODULO expression .)
    COMA            reduce using rule 25 (expression -> expression MODULO expression .)
    CORCHETEDER     reduce using rule 25 (expression -> expression MODULO expression .)
    POTENCIA        shift and go to state 98

  ! POTENCIA        [ reduce using rule 25 (expression -> expression MODULO expression .) ]
  ! MAS             [ shift and go to state 94 ]
  ! MENOS           [ shift and go to state 95 ]
  ! POR             [ shift and go to state 96 ]
  ! DIVIDIDO        [ shift and go to state 97 ]
  ! MODULO          [ shift and go to state 99 ]
  ! MAYQUE          [ shift and go to state 100 ]
  ! MENQUE          [ shift and go to state 101 ]
  ! MENIGUALQUE     [ shift and go to state 102 ]
  ! MAYIGUALQUE     [ shift and go to state 103 ]
  ! IGUALQUE        [ shift and go to state 104 ]
  ! NIGUALQUE       [ shift and go to state 105 ]
  ! OR              [ shift and go to state 106 ]
  ! AND             [ shift and go to state 107 ]


state 138

    (26) expression -> expression MAYQUE expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    MAYQUE          reduce using rule 26 (expression -> expression MAYQUE expression .)
    MENQUE          reduce using rule 26 (expression -> expression MAYQUE expression .)
    MENIGUALQUE     reduce using rule 26 (expression -> expression MAYQUE expression .)
    MAYIGUALQUE     reduce using rule 26 (expression -> expression MAYQUE expression .)
    IGUALQUE        reduce using rule 26 (expression -> expression MAYQUE expression .)
    NIGUALQUE       reduce using rule 26 (expression -> expression MAYQUE expression .)
    OR              reduce using rule 26 (expression -> expression MAYQUE expression .)
    AND             reduce using rule 26 (expression -> expression MAYQUE expression .)
    LINEANUEVA      reduce using rule 26 (expression -> expression MAYQUE expression .)
    DOSP            reduce using rule 26 (expression -> expression MAYQUE expression .)
    PARDER          reduce using rule 26 (expression -> expression MAYQUE expression .)
    COMA            reduce using rule 26 (expression -> expression MAYQUE expression .)
    CORCHETEDER     reduce using rule 26 (expression -> expression MAYQUE expression .)
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99

  ! MAS             [ reduce using rule 26 (expression -> expression MAYQUE expression .) ]
  ! MENOS           [ reduce using rule 26 (expression -> expression MAYQUE expression .) ]
  ! POR             [ reduce using rule 26 (expression -> expression MAYQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 26 (expression -> expression MAYQUE expression .) ]
  ! POTENCIA        [ reduce using rule 26 (expression -> expression MAYQUE expression .) ]
  ! MODULO          [ reduce using rule 26 (expression -> expression MAYQUE expression .) ]
  ! MAYQUE          [ shift and go to state 100 ]
  ! MENQUE          [ shift and go to state 101 ]
  ! MENIGUALQUE     [ shift and go to state 102 ]
  ! MAYIGUALQUE     [ shift and go to state 103 ]
  ! IGUALQUE        [ shift and go to state 104 ]
  ! NIGUALQUE       [ shift and go to state 105 ]
  ! OR              [ shift and go to state 106 ]
  ! AND             [ shift and go to state 107 ]


state 139

    (27) expression -> expression MENQUE expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    MAYQUE          reduce using rule 27 (expression -> expression MENQUE expression .)
    MENQUE          reduce using rule 27 (expression -> expression MENQUE expression .)
    MENIGUALQUE     reduce using rule 27 (expression -> expression MENQUE expression .)
    MAYIGUALQUE     reduce using rule 27 (expression -> expression MENQUE expression .)
    IGUALQUE        reduce using rule 27 (expression -> expression MENQUE expression .)
    NIGUALQUE       reduce using rule 27 (expression -> expression MENQUE expression .)
    OR              reduce using rule 27 (expression -> expression MENQUE expression .)
    AND             reduce using rule 27 (expression -> expression MENQUE expression .)
    LINEANUEVA      reduce using rule 27 (expression -> expression MENQUE expression .)
    DOSP            reduce using rule 27 (expression -> expression MENQUE expression .)
    PARDER          reduce using rule 27 (expression -> expression MENQUE expression .)
    COMA            reduce using rule 27 (expression -> expression MENQUE expression .)
    CORCHETEDER     reduce using rule 27 (expression -> expression MENQUE expression .)
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99

  ! MAS             [ reduce using rule 27 (expression -> expression MENQUE expression .) ]
  ! MENOS           [ reduce using rule 27 (expression -> expression MENQUE expression .) ]
  ! POR             [ reduce using rule 27 (expression -> expression MENQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 27 (expression -> expression MENQUE expression .) ]
  ! POTENCIA        [ reduce using rule 27 (expression -> expression MENQUE expression .) ]
  ! MODULO          [ reduce using rule 27 (expression -> expression MENQUE expression .) ]
  ! MAYQUE          [ shift and go to state 100 ]
  ! MENQUE          [ shift and go to state 101 ]
  ! MENIGUALQUE     [ shift and go to state 102 ]
  ! MAYIGUALQUE     [ shift and go to state 103 ]
  ! IGUALQUE        [ shift and go to state 104 ]
  ! NIGUALQUE       [ shift and go to state 105 ]
  ! OR              [ shift and go to state 106 ]
  ! AND             [ shift and go to state 107 ]


state 140

    (28) expression -> expression MENIGUALQUE expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    MAYQUE          reduce using rule 28 (expression -> expression MENIGUALQUE expression .)
    MENQUE          reduce using rule 28 (expression -> expression MENIGUALQUE expression .)
    MENIGUALQUE     reduce using rule 28 (expression -> expression MENIGUALQUE expression .)
    MAYIGUALQUE     reduce using rule 28 (expression -> expression MENIGUALQUE expression .)
    IGUALQUE        reduce using rule 28 (expression -> expression MENIGUALQUE expression .)
    NIGUALQUE       reduce using rule 28 (expression -> expression MENIGUALQUE expression .)
    OR              reduce using rule 28 (expression -> expression MENIGUALQUE expression .)
    AND             reduce using rule 28 (expression -> expression MENIGUALQUE expression .)
    LINEANUEVA      reduce using rule 28 (expression -> expression MENIGUALQUE expression .)
    DOSP            reduce using rule 28 (expression -> expression MENIGUALQUE expression .)
    PARDER          reduce using rule 28 (expression -> expression MENIGUALQUE expression .)
    COMA            reduce using rule 28 (expression -> expression MENIGUALQUE expression .)
    CORCHETEDER     reduce using rule 28 (expression -> expression MENIGUALQUE expression .)
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99

  ! MAS             [ reduce using rule 28 (expression -> expression MENIGUALQUE expression .) ]
  ! MENOS           [ reduce using rule 28 (expression -> expression MENIGUALQUE expression .) ]
  ! POR             [ reduce using rule 28 (expression -> expression MENIGUALQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 28 (expression -> expression MENIGUALQUE expression .) ]
  ! POTENCIA        [ reduce using rule 28 (expression -> expression MENIGUALQUE expression .) ]
  ! MODULO          [ reduce using rule 28 (expression -> expression MENIGUALQUE expression .) ]
  ! MAYQUE          [ shift and go to state 100 ]
  ! MENQUE          [ shift and go to state 101 ]
  ! MENIGUALQUE     [ shift and go to state 102 ]
  ! MAYIGUALQUE     [ shift and go to state 103 ]
  ! IGUALQUE        [ shift and go to state 104 ]
  ! NIGUALQUE       [ shift and go to state 105 ]
  ! OR              [ shift and go to state 106 ]
  ! AND             [ shift and go to state 107 ]


state 141

    (29) expression -> expression MAYIGUALQUE expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    MAYQUE          reduce using rule 29 (expression -> expression MAYIGUALQUE expression .)
    MENQUE          reduce using rule 29 (expression -> expression MAYIGUALQUE expression .)
    MENIGUALQUE     reduce using rule 29 (expression -> expression MAYIGUALQUE expression .)
    MAYIGUALQUE     reduce using rule 29 (expression -> expression MAYIGUALQUE expression .)
    IGUALQUE        reduce using rule 29 (expression -> expression MAYIGUALQUE expression .)
    NIGUALQUE       reduce using rule 29 (expression -> expression MAYIGUALQUE expression .)
    OR              reduce using rule 29 (expression -> expression MAYIGUALQUE expression .)
    AND             reduce using rule 29 (expression -> expression MAYIGUALQUE expression .)
    LINEANUEVA      reduce using rule 29 (expression -> expression MAYIGUALQUE expression .)
    DOSP            reduce using rule 29 (expression -> expression MAYIGUALQUE expression .)
    PARDER          reduce using rule 29 (expression -> expression MAYIGUALQUE expression .)
    COMA            reduce using rule 29 (expression -> expression MAYIGUALQUE expression .)
    CORCHETEDER     reduce using rule 29 (expression -> expression MAYIGUALQUE expression .)
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99

  ! MAS             [ reduce using rule 29 (expression -> expression MAYIGUALQUE expression .) ]
  ! MENOS           [ reduce using rule 29 (expression -> expression MAYIGUALQUE expression .) ]
  ! POR             [ reduce using rule 29 (expression -> expression MAYIGUALQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 29 (expression -> expression MAYIGUALQUE expression .) ]
  ! POTENCIA        [ reduce using rule 29 (expression -> expression MAYIGUALQUE expression .) ]
  ! MODULO          [ reduce using rule 29 (expression -> expression MAYIGUALQUE expression .) ]
  ! MAYQUE          [ shift and go to state 100 ]
  ! MENQUE          [ shift and go to state 101 ]
  ! MENIGUALQUE     [ shift and go to state 102 ]
  ! MAYIGUALQUE     [ shift and go to state 103 ]
  ! IGUALQUE        [ shift and go to state 104 ]
  ! NIGUALQUE       [ shift and go to state 105 ]
  ! OR              [ shift and go to state 106 ]
  ! AND             [ shift and go to state 107 ]


state 142

    (30) expression -> expression IGUALQUE expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    IGUALQUE        reduce using rule 30 (expression -> expression IGUALQUE expression .)
    NIGUALQUE       reduce using rule 30 (expression -> expression IGUALQUE expression .)
    OR              reduce using rule 30 (expression -> expression IGUALQUE expression .)
    AND             reduce using rule 30 (expression -> expression IGUALQUE expression .)
    LINEANUEVA      reduce using rule 30 (expression -> expression IGUALQUE expression .)
    DOSP            reduce using rule 30 (expression -> expression IGUALQUE expression .)
    PARDER          reduce using rule 30 (expression -> expression IGUALQUE expression .)
    COMA            reduce using rule 30 (expression -> expression IGUALQUE expression .)
    CORCHETEDER     reduce using rule 30 (expression -> expression IGUALQUE expression .)
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103

  ! MAS             [ reduce using rule 30 (expression -> expression IGUALQUE expression .) ]
  ! MENOS           [ reduce using rule 30 (expression -> expression IGUALQUE expression .) ]
  ! POR             [ reduce using rule 30 (expression -> expression IGUALQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 30 (expression -> expression IGUALQUE expression .) ]
  ! POTENCIA        [ reduce using rule 30 (expression -> expression IGUALQUE expression .) ]
  ! MODULO          [ reduce using rule 30 (expression -> expression IGUALQUE expression .) ]
  ! MAYQUE          [ reduce using rule 30 (expression -> expression IGUALQUE expression .) ]
  ! MENQUE          [ reduce using rule 30 (expression -> expression IGUALQUE expression .) ]
  ! MENIGUALQUE     [ reduce using rule 30 (expression -> expression IGUALQUE expression .) ]
  ! MAYIGUALQUE     [ reduce using rule 30 (expression -> expression IGUALQUE expression .) ]
  ! IGUALQUE        [ shift and go to state 104 ]
  ! NIGUALQUE       [ shift and go to state 105 ]
  ! OR              [ shift and go to state 106 ]
  ! AND             [ shift and go to state 107 ]


state 143

    (31) expression -> expression NIGUALQUE expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    IGUALQUE        reduce using rule 31 (expression -> expression NIGUALQUE expression .)
    NIGUALQUE       reduce using rule 31 (expression -> expression NIGUALQUE expression .)
    OR              reduce using rule 31 (expression -> expression NIGUALQUE expression .)
    AND             reduce using rule 31 (expression -> expression NIGUALQUE expression .)
    LINEANUEVA      reduce using rule 31 (expression -> expression NIGUALQUE expression .)
    DOSP            reduce using rule 31 (expression -> expression NIGUALQUE expression .)
    PARDER          reduce using rule 31 (expression -> expression NIGUALQUE expression .)
    COMA            reduce using rule 31 (expression -> expression NIGUALQUE expression .)
    CORCHETEDER     reduce using rule 31 (expression -> expression NIGUALQUE expression .)
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103

  ! MAS             [ reduce using rule 31 (expression -> expression NIGUALQUE expression .) ]
  ! MENOS           [ reduce using rule 31 (expression -> expression NIGUALQUE expression .) ]
  ! POR             [ reduce using rule 31 (expression -> expression NIGUALQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 31 (expression -> expression NIGUALQUE expression .) ]
  ! POTENCIA        [ reduce using rule 31 (expression -> expression NIGUALQUE expression .) ]
  ! MODULO          [ reduce using rule 31 (expression -> expression NIGUALQUE expression .) ]
  ! MAYQUE          [ reduce using rule 31 (expression -> expression NIGUALQUE expression .) ]
  ! MENQUE          [ reduce using rule 31 (expression -> expression NIGUALQUE expression .) ]
  ! MENIGUALQUE     [ reduce using rule 31 (expression -> expression NIGUALQUE expression .) ]
  ! MAYIGUALQUE     [ reduce using rule 31 (expression -> expression NIGUALQUE expression .) ]
  ! IGUALQUE        [ shift and go to state 104 ]
  ! NIGUALQUE       [ shift and go to state 105 ]
  ! OR              [ shift and go to state 106 ]
  ! AND             [ shift and go to state 107 ]


state 144

    (32) expression -> expression OR expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    OR              reduce using rule 32 (expression -> expression OR expression .)
    LINEANUEVA      reduce using rule 32 (expression -> expression OR expression .)
    DOSP            reduce using rule 32 (expression -> expression OR expression .)
    PARDER          reduce using rule 32 (expression -> expression OR expression .)
    COMA            reduce using rule 32 (expression -> expression OR expression .)
    CORCHETEDER     reduce using rule 32 (expression -> expression OR expression .)
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    AND             shift and go to state 107

  ! MAS             [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! MENOS           [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! POR             [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! DIVIDIDO        [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! POTENCIA        [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! MODULO          [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! MAYQUE          [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! MENQUE          [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! MENIGUALQUE     [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! MAYIGUALQUE     [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! IGUALQUE        [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! NIGUALQUE       [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 106 ]


state 145

    (33) expression -> expression AND expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    OR              reduce using rule 33 (expression -> expression AND expression .)
    AND             reduce using rule 33 (expression -> expression AND expression .)
    LINEANUEVA      reduce using rule 33 (expression -> expression AND expression .)
    DOSP            reduce using rule 33 (expression -> expression AND expression .)
    PARDER          reduce using rule 33 (expression -> expression AND expression .)
    COMA            reduce using rule 33 (expression -> expression AND expression .)
    CORCHETEDER     reduce using rule 33 (expression -> expression AND expression .)
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105

  ! MAS             [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! MENOS           [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! POR             [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! DIVIDIDO        [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! POTENCIA        [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! MODULO          [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! MAYQUE          [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! MENQUE          [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! MENIGUALQUE     [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! MAYIGUALQUE     [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! IGUALQUE        [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! NIGUALQUE       [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! OR              [ shift and go to state 106 ]
  ! AND             [ shift and go to state 107 ]


state 146

    (35) final_expression -> PARIZQ expression PARDER .

    MAS             reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)
    MENOS           reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)
    POR             reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)
    MODULO          reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)
    MENQUE          reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)
    OR              reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)
    AND             reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)
    LINEANUEVA      reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)
    DOSP            reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)
    PARDER          reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)
    COMA            reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 35 (final_expression -> PARIZQ expression PARDER .)


state 147

    (36) final_expression -> CORCHETEIZQ exp_list CORCHETEDER .

    MAS             reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    MENOS           reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    POR             reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    DIVIDIDO        reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    POTENCIA        reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    MODULO          reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    MAYQUE          reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    MENQUE          reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    MENIGUALQUE     reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    MAYIGUALQUE     reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    IGUALQUE        reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    NIGUALQUE       reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    OR              reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    AND             reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    LINEANUEVA      reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    DOSP            reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    PARDER          reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    COMA            reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    CORCHETEDER     reduce using rule 36 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)


state 148

    (74) if_state -> IF expression DOSP statement . END
    (75) if_state -> IF expression DOSP statement . ELSE DOSP statement END
    (76) if_state -> IF expression DOSP statement . else_if_list END
    (77) else_if_list -> . ELIF expression DOSP statement
    (78) else_if_list -> . ELIF expression DOSP statement ELSE statement
    (79) else_if_list -> . ELIF expression DOSP statement else_if_list

    END             shift and go to state 164
    ELSE            shift and go to state 165
    ELIF            shift and go to state 167

    else_if_list                   shift and go to state 166

state 149

    (67) statement -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print_instr LINEANUEVA
    (5) instruccion -> . println_instr LINEANUEVA
    (6) instruccion -> . asignacion_instr LINEANUEVA
    (7) instruccion -> . asignacion_arreglo_instr LINEANUEVA
    (8) instruccion -> . definicion_asignacion_instr LINEANUEVA
    (9) instruccion -> . call_function LINEANUEVA
    (10) instruccion -> . declare_function LINEANUEVA
    (11) instruccion -> . return_state LINEANUEVA
    (12) instruccion -> . break_state LINEANUEVA
    (13) instruccion -> . continue_state LINEANUEVA
    (14) instruccion -> . if_state LINEANUEVA
    (15) instruccion -> . while_state LINEANUEVA
    (16) instruccion -> . for_state LINEANUEVA
    (17) instruccion -> . nativas LINEANUEVA
    (51) print_instr -> . PRINT PARIZQ exp_list PARDER
    (52) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (58) asignacion_instr -> . ID IGUAL expression
    (60) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (59) definicion_asignacion_instr -> . ID DOSP tipo IGUAL expression
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (68) declare_function -> . DEF ID PARIZQ dec_params PARDER DOSP statement END
    (69) declare_function -> . DEF ID PARIZQ PARDER DOSP statement END
    (85) return_state -> . RETURN
    (86) return_state -> . RETURN expression
    (83) break_state -> . BREAK
    (84) continue_state -> . CONTINUE
    (74) if_state -> . IF expression DOSP statement END
    (75) if_state -> . IF expression DOSP statement ELSE DOSP statement END
    (76) if_state -> . IF expression DOSP statement else_if_list END
    (80) while_state -> . WHILE expression DOSP statement END
    (81) for_state -> . FOR ID IN expression DOSP expression DOSP statement END
    (82) for_state -> . FOR ID IN expression DOSP statement END
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    END             reduce using rule 67 (statement -> instrucciones .)
    ELSE            reduce using rule 67 (statement -> instrucciones .)
    ELIF            reduce using rule 67 (statement -> instrucciones .)
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 20
    DEF             shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    instruccion                    shift and go to state 33
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    asignacion_instr               shift and go to state 6
    asignacion_arreglo_instr       shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16
    nativas                        shift and go to state 17

state 150

    (80) while_state -> WHILE expression DOSP statement . END

    END             shift and go to state 168


state 151

    (81) for_state -> FOR ID IN expression . DOSP expression DOSP statement END
    (82) for_state -> FOR ID IN expression . DOSP statement END
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    DOSP            shift and go to state 169
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 152

    (46) nativas -> UPPER PARIZQ expression PARDER .

    LINEANUEVA      reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)
    MAS             reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)
    MENOS           reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)
    POR             reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)
    MODULO          reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)
    MENQUE          reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)
    OR              reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)
    AND             reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)
    DOSP            reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)
    PARDER          reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)
    COMA            reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 46 (nativas -> UPPER PARIZQ expression PARDER .)


state 153

    (47) nativas -> LOWER PARIZQ expression PARDER .

    LINEANUEVA      reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)
    MAS             reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)
    MENOS           reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)
    POR             reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)
    MODULO          reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)
    MENQUE          reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)
    OR              reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)
    AND             reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)
    DOSP            reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)
    PARDER          reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)
    COMA            reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 47 (nativas -> LOWER PARIZQ expression PARDER .)


state 154

    (48) nativas -> STR PARIZQ expression PARDER .

    LINEANUEVA      reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)
    MAS             reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)
    MENOS           reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)
    POR             reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)
    MODULO          reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)
    MENQUE          reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)
    OR              reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)
    AND             reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)
    DOSP            reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)
    PARDER          reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)
    COMA            reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 48 (nativas -> STR PARIZQ expression PARDER .)


state 155

    (49) nativas -> FLOAT PARIZQ expression PARDER .

    LINEANUEVA      reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)
    MAS             reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)
    MENOS           reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)
    POR             reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)
    MODULO          reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)
    MENQUE          reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)
    OR              reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)
    AND             reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)
    DOSP            reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)
    PARDER          reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)
    COMA            reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 49 (nativas -> FLOAT PARIZQ expression PARDER .)


state 156

    (50) nativas -> LEN PARIZQ expression PARDER .

    LINEANUEVA      reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)
    MAS             reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)
    MENOS           reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)
    POR             reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)
    MODULO          reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)
    MENQUE          reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)
    OR              reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)
    AND             reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)
    DOSP            reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)
    PARDER          reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)
    COMA            reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 50 (nativas -> LEN PARIZQ expression PARDER .)


state 157

    (63) exp_list -> exp_list COMA expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    PARDER          reduce using rule 63 (exp_list -> exp_list COMA expression .)
    COMA            reduce using rule 63 (exp_list -> exp_list COMA expression .)
    CORCHETEDER     reduce using rule 63 (exp_list -> exp_list COMA expression .)
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 158

    (65) index_list -> index_list CORCHETEIZQ expression CORCHETEDER .

    IGUAL           reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    CORCHETEIZQ     reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    MAS             reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    MENOS           reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    POR             reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    DIVIDIDO        reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    POTENCIA        reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    MODULO          reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    MAYQUE          reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    MENQUE          reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    MENIGUALQUE     reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    MAYIGUALQUE     reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    IGUALQUE        reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    NIGUALQUE       reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    OR              reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    AND             reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    LINEANUEVA      reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    DOSP            reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    PARDER          reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    COMA            reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    CORCHETEDER     reduce using rule 65 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)


state 159

    (59) definicion_asignacion_instr -> ID DOSP tipo IGUAL expression .
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    LINEANUEVA      reduce using rule 59 (definicion_asignacion_instr -> ID DOSP tipo IGUAL expression .)
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 160

    (72) dec_params -> ID DOSP . tipo
    (53) tipo -> . INT
    (54) tipo -> . FLOAT
    (55) tipo -> . BOOL
    (56) tipo -> . STR
    (57) tipo -> . NONE

    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    BOOL            shift and go to state 87
    STR             shift and go to state 88
    NONE            shift and go to state 89

    tipo                           shift and go to state 170

state 161

    (68) declare_function -> DEF ID PARIZQ dec_params PARDER . DOSP statement END

    DOSP            shift and go to state 171


state 162

    (70) dec_params -> dec_params COMA . ID DOSP tipo
    (71) dec_params -> dec_params COMA . ID

    ID              shift and go to state 172


state 163

    (69) declare_function -> DEF ID PARIZQ PARDER DOSP . statement END
    (67) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr LINEANUEVA
    (5) instruccion -> . println_instr LINEANUEVA
    (6) instruccion -> . asignacion_instr LINEANUEVA
    (7) instruccion -> . asignacion_arreglo_instr LINEANUEVA
    (8) instruccion -> . definicion_asignacion_instr LINEANUEVA
    (9) instruccion -> . call_function LINEANUEVA
    (10) instruccion -> . declare_function LINEANUEVA
    (11) instruccion -> . return_state LINEANUEVA
    (12) instruccion -> . break_state LINEANUEVA
    (13) instruccion -> . continue_state LINEANUEVA
    (14) instruccion -> . if_state LINEANUEVA
    (15) instruccion -> . while_state LINEANUEVA
    (16) instruccion -> . for_state LINEANUEVA
    (17) instruccion -> . nativas LINEANUEVA
    (51) print_instr -> . PRINT PARIZQ exp_list PARDER
    (52) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (58) asignacion_instr -> . ID IGUAL expression
    (60) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (59) definicion_asignacion_instr -> . ID DOSP tipo IGUAL expression
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (68) declare_function -> . DEF ID PARIZQ dec_params PARDER DOSP statement END
    (69) declare_function -> . DEF ID PARIZQ PARDER DOSP statement END
    (85) return_state -> . RETURN
    (86) return_state -> . RETURN expression
    (83) break_state -> . BREAK
    (84) continue_state -> . CONTINUE
    (74) if_state -> . IF expression DOSP statement END
    (75) if_state -> . IF expression DOSP statement ELSE DOSP statement END
    (76) if_state -> . IF expression DOSP statement else_if_list END
    (80) while_state -> . WHILE expression DOSP statement END
    (81) for_state -> . FOR ID IN expression DOSP expression DOSP statement END
    (82) for_state -> . FOR ID IN expression DOSP statement END
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 20
    DEF             shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    statement                      shift and go to state 173
    instrucciones                  shift and go to state 149
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    asignacion_instr               shift and go to state 6
    asignacion_arreglo_instr       shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16
    nativas                        shift and go to state 17

state 164

    (74) if_state -> IF expression DOSP statement END .

    LINEANUEVA      reduce using rule 74 (if_state -> IF expression DOSP statement END .)


state 165

    (75) if_state -> IF expression DOSP statement ELSE . DOSP statement END

    DOSP            shift and go to state 174


state 166

    (76) if_state -> IF expression DOSP statement else_if_list . END

    END             shift and go to state 175


state 167

    (77) else_if_list -> ELIF . expression DOSP statement
    (78) else_if_list -> ELIF . expression DOSP statement ELSE statement
    (79) else_if_list -> ELIF . expression DOSP statement else_if_list
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    expression                     shift and go to state 176
    final_expression               shift and go to state 59
    call_function                  shift and go to state 68
    nativas                        shift and go to state 69

state 168

    (80) while_state -> WHILE expression DOSP statement END .

    LINEANUEVA      reduce using rule 80 (while_state -> WHILE expression DOSP statement END .)


state 169

    (81) for_state -> FOR ID IN expression DOSP . expression DOSP statement END
    (82) for_state -> FOR ID IN expression DOSP . statement END
    (18) expression -> . MENOS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression MAS expression
    (21) expression -> . expression MENOS expression
    (22) expression -> . expression POR expression
    (23) expression -> . expression DIVIDIDO expression
    (24) expression -> . expression POTENCIA expression
    (25) expression -> . expression MODULO expression
    (26) expression -> . expression MAYQUE expression
    (27) expression -> . expression MENQUE expression
    (28) expression -> . expression MENIGUALQUE expression
    (29) expression -> . expression MAYIGUALQUE expression
    (30) expression -> . expression IGUALQUE expression
    (31) expression -> . expression NIGUALQUE expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . final_expression
    (67) statement -> . instrucciones
    (35) final_expression -> . PARIZQ expression PARDER
    (36) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (37) final_expression -> . DECIMAL
    (38) final_expression -> . ENTERO
    (39) final_expression -> . CADENA
    (40) final_expression -> . ID
    (41) final_expression -> . ID index_list
    (42) final_expression -> . TRUE
    (43) final_expression -> . FALSE
    (44) final_expression -> . call_function
    (45) final_expression -> . nativas
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER
    (4) instruccion -> . print_instr LINEANUEVA
    (5) instruccion -> . println_instr LINEANUEVA
    (6) instruccion -> . asignacion_instr LINEANUEVA
    (7) instruccion -> . asignacion_arreglo_instr LINEANUEVA
    (8) instruccion -> . definicion_asignacion_instr LINEANUEVA
    (9) instruccion -> . call_function LINEANUEVA
    (10) instruccion -> . declare_function LINEANUEVA
    (11) instruccion -> . return_state LINEANUEVA
    (12) instruccion -> . break_state LINEANUEVA
    (13) instruccion -> . continue_state LINEANUEVA
    (14) instruccion -> . if_state LINEANUEVA
    (15) instruccion -> . while_state LINEANUEVA
    (16) instruccion -> . for_state LINEANUEVA
    (17) instruccion -> . nativas LINEANUEVA
    (51) print_instr -> . PRINT PARIZQ exp_list PARDER
    (52) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (58) asignacion_instr -> . ID IGUAL expression
    (60) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (59) definicion_asignacion_instr -> . ID DOSP tipo IGUAL expression
    (68) declare_function -> . DEF ID PARIZQ dec_params PARDER DOSP statement END
    (69) declare_function -> . DEF ID PARIZQ PARDER DOSP statement END
    (85) return_state -> . RETURN
    (86) return_state -> . RETURN expression
    (83) break_state -> . BREAK
    (84) continue_state -> . CONTINUE
    (74) if_state -> . IF expression DOSP statement END
    (75) if_state -> . IF expression DOSP statement ELSE DOSP statement END
    (76) if_state -> . IF expression DOSP statement else_if_list END
    (80) while_state -> . WHILE expression DOSP statement END
    (81) for_state -> . FOR ID IN expression DOSP expression DOSP statement END
    (82) for_state -> . FOR ID IN expression DOSP statement END

    MENOS           shift and go to state 57
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 60
    CORCHETEIZQ     shift and go to state 61
    DECIMAL         shift and go to state 62
    ENTERO          shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 177
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    DEF             shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27

    expression                     shift and go to state 178
    statement                      shift and go to state 179
    final_expression               shift and go to state 59
    instrucciones                  shift and go to state 149
    call_function                  shift and go to state 180
    nativas                        shift and go to state 181
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    asignacion_instr               shift and go to state 6
    asignacion_arreglo_instr       shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16

state 170

    (72) dec_params -> ID DOSP tipo .

    PARDER          reduce using rule 72 (dec_params -> ID DOSP tipo .)
    COMA            reduce using rule 72 (dec_params -> ID DOSP tipo .)


state 171

    (68) declare_function -> DEF ID PARIZQ dec_params PARDER DOSP . statement END
    (67) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr LINEANUEVA
    (5) instruccion -> . println_instr LINEANUEVA
    (6) instruccion -> . asignacion_instr LINEANUEVA
    (7) instruccion -> . asignacion_arreglo_instr LINEANUEVA
    (8) instruccion -> . definicion_asignacion_instr LINEANUEVA
    (9) instruccion -> . call_function LINEANUEVA
    (10) instruccion -> . declare_function LINEANUEVA
    (11) instruccion -> . return_state LINEANUEVA
    (12) instruccion -> . break_state LINEANUEVA
    (13) instruccion -> . continue_state LINEANUEVA
    (14) instruccion -> . if_state LINEANUEVA
    (15) instruccion -> . while_state LINEANUEVA
    (16) instruccion -> . for_state LINEANUEVA
    (17) instruccion -> . nativas LINEANUEVA
    (51) print_instr -> . PRINT PARIZQ exp_list PARDER
    (52) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (58) asignacion_instr -> . ID IGUAL expression
    (60) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (59) definicion_asignacion_instr -> . ID DOSP tipo IGUAL expression
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (68) declare_function -> . DEF ID PARIZQ dec_params PARDER DOSP statement END
    (69) declare_function -> . DEF ID PARIZQ PARDER DOSP statement END
    (85) return_state -> . RETURN
    (86) return_state -> . RETURN expression
    (83) break_state -> . BREAK
    (84) continue_state -> . CONTINUE
    (74) if_state -> . IF expression DOSP statement END
    (75) if_state -> . IF expression DOSP statement ELSE DOSP statement END
    (76) if_state -> . IF expression DOSP statement else_if_list END
    (80) while_state -> . WHILE expression DOSP statement END
    (81) for_state -> . FOR ID IN expression DOSP expression DOSP statement END
    (82) for_state -> . FOR ID IN expression DOSP statement END
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 20
    DEF             shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    statement                      shift and go to state 182
    instrucciones                  shift and go to state 149
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    asignacion_instr               shift and go to state 6
    asignacion_arreglo_instr       shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16
    nativas                        shift and go to state 17

state 172

    (70) dec_params -> dec_params COMA ID . DOSP tipo
    (71) dec_params -> dec_params COMA ID .

    DOSP            shift and go to state 183
    PARDER          reduce using rule 71 (dec_params -> dec_params COMA ID .)
    COMA            reduce using rule 71 (dec_params -> dec_params COMA ID .)


state 173

    (69) declare_function -> DEF ID PARIZQ PARDER DOSP statement . END

    END             shift and go to state 184


state 174

    (75) if_state -> IF expression DOSP statement ELSE DOSP . statement END
    (67) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr LINEANUEVA
    (5) instruccion -> . println_instr LINEANUEVA
    (6) instruccion -> . asignacion_instr LINEANUEVA
    (7) instruccion -> . asignacion_arreglo_instr LINEANUEVA
    (8) instruccion -> . definicion_asignacion_instr LINEANUEVA
    (9) instruccion -> . call_function LINEANUEVA
    (10) instruccion -> . declare_function LINEANUEVA
    (11) instruccion -> . return_state LINEANUEVA
    (12) instruccion -> . break_state LINEANUEVA
    (13) instruccion -> . continue_state LINEANUEVA
    (14) instruccion -> . if_state LINEANUEVA
    (15) instruccion -> . while_state LINEANUEVA
    (16) instruccion -> . for_state LINEANUEVA
    (17) instruccion -> . nativas LINEANUEVA
    (51) print_instr -> . PRINT PARIZQ exp_list PARDER
    (52) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (58) asignacion_instr -> . ID IGUAL expression
    (60) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (59) definicion_asignacion_instr -> . ID DOSP tipo IGUAL expression
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (68) declare_function -> . DEF ID PARIZQ dec_params PARDER DOSP statement END
    (69) declare_function -> . DEF ID PARIZQ PARDER DOSP statement END
    (85) return_state -> . RETURN
    (86) return_state -> . RETURN expression
    (83) break_state -> . BREAK
    (84) continue_state -> . CONTINUE
    (74) if_state -> . IF expression DOSP statement END
    (75) if_state -> . IF expression DOSP statement ELSE DOSP statement END
    (76) if_state -> . IF expression DOSP statement else_if_list END
    (80) while_state -> . WHILE expression DOSP statement END
    (81) for_state -> . FOR ID IN expression DOSP expression DOSP statement END
    (82) for_state -> . FOR ID IN expression DOSP statement END
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 20
    DEF             shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    statement                      shift and go to state 185
    instrucciones                  shift and go to state 149
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    asignacion_instr               shift and go to state 6
    asignacion_arreglo_instr       shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16
    nativas                        shift and go to state 17

state 175

    (76) if_state -> IF expression DOSP statement else_if_list END .

    LINEANUEVA      reduce using rule 76 (if_state -> IF expression DOSP statement else_if_list END .)


state 176

    (77) else_if_list -> ELIF expression . DOSP statement
    (78) else_if_list -> ELIF expression . DOSP statement ELSE statement
    (79) else_if_list -> ELIF expression . DOSP statement else_if_list
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    DOSP            shift and go to state 186
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 177

    (40) final_expression -> ID .
    (41) final_expression -> ID . index_list
    (61) call_function -> ID . PARIZQ PARDER
    (62) call_function -> ID . PARIZQ exp_list PARDER
    (58) asignacion_instr -> ID . IGUAL expression
    (60) asignacion_arreglo_instr -> ID . index_list IGUAL expression
    (59) definicion_asignacion_instr -> ID . DOSP tipo IGUAL expression
    (65) index_list -> . index_list CORCHETEIZQ expression CORCHETEDER
    (66) index_list -> . CORCHETEIZQ expression CORCHETEDER

  ! shift/reduce conflict for DOSP resolved as shift
    MAS             reduce using rule 40 (final_expression -> ID .)
    MENOS           reduce using rule 40 (final_expression -> ID .)
    POR             reduce using rule 40 (final_expression -> ID .)
    DIVIDIDO        reduce using rule 40 (final_expression -> ID .)
    POTENCIA        reduce using rule 40 (final_expression -> ID .)
    MODULO          reduce using rule 40 (final_expression -> ID .)
    MAYQUE          reduce using rule 40 (final_expression -> ID .)
    MENQUE          reduce using rule 40 (final_expression -> ID .)
    MENIGUALQUE     reduce using rule 40 (final_expression -> ID .)
    MAYIGUALQUE     reduce using rule 40 (final_expression -> ID .)
    IGUALQUE        reduce using rule 40 (final_expression -> ID .)
    NIGUALQUE       reduce using rule 40 (final_expression -> ID .)
    OR              reduce using rule 40 (final_expression -> ID .)
    AND             reduce using rule 40 (final_expression -> ID .)
    PARIZQ          shift and go to state 53
    IGUAL           shift and go to state 50
    DOSP            shift and go to state 52
    CORCHETEIZQ     shift and go to state 54

  ! DOSP            [ reduce using rule 40 (final_expression -> ID .) ]

    index_list                     shift and go to state 187

state 178

    (81) for_state -> FOR ID IN expression DOSP expression . DOSP statement END
    (20) expression -> expression . MAS expression
    (21) expression -> expression . MENOS expression
    (22) expression -> expression . POR expression
    (23) expression -> expression . DIVIDIDO expression
    (24) expression -> expression . POTENCIA expression
    (25) expression -> expression . MODULO expression
    (26) expression -> expression . MAYQUE expression
    (27) expression -> expression . MENQUE expression
    (28) expression -> expression . MENIGUALQUE expression
    (29) expression -> expression . MAYIGUALQUE expression
    (30) expression -> expression . IGUALQUE expression
    (31) expression -> expression . NIGUALQUE expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression

    DOSP            shift and go to state 188
    MAS             shift and go to state 94
    MENOS           shift and go to state 95
    POR             shift and go to state 96
    DIVIDIDO        shift and go to state 97
    POTENCIA        shift and go to state 98
    MODULO          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENQUE          shift and go to state 101
    MENIGUALQUE     shift and go to state 102
    MAYIGUALQUE     shift and go to state 103
    IGUALQUE        shift and go to state 104
    NIGUALQUE       shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107


state 179

    (82) for_state -> FOR ID IN expression DOSP statement . END

    END             shift and go to state 189


state 180

    (44) final_expression -> call_function .
    (9) instruccion -> call_function . LINEANUEVA

    DOSP            reduce using rule 44 (final_expression -> call_function .)
    MAS             reduce using rule 44 (final_expression -> call_function .)
    MENOS           reduce using rule 44 (final_expression -> call_function .)
    POR             reduce using rule 44 (final_expression -> call_function .)
    DIVIDIDO        reduce using rule 44 (final_expression -> call_function .)
    POTENCIA        reduce using rule 44 (final_expression -> call_function .)
    MODULO          reduce using rule 44 (final_expression -> call_function .)
    MAYQUE          reduce using rule 44 (final_expression -> call_function .)
    MENQUE          reduce using rule 44 (final_expression -> call_function .)
    MENIGUALQUE     reduce using rule 44 (final_expression -> call_function .)
    MAYIGUALQUE     reduce using rule 44 (final_expression -> call_function .)
    IGUALQUE        reduce using rule 44 (final_expression -> call_function .)
    NIGUALQUE       reduce using rule 44 (final_expression -> call_function .)
    OR              reduce using rule 44 (final_expression -> call_function .)
    AND             reduce using rule 44 (final_expression -> call_function .)
    LINEANUEVA      shift and go to state 39


state 181

    (45) final_expression -> nativas .
    (17) instruccion -> nativas . LINEANUEVA

    DOSP            reduce using rule 45 (final_expression -> nativas .)
    MAS             reduce using rule 45 (final_expression -> nativas .)
    MENOS           reduce using rule 45 (final_expression -> nativas .)
    POR             reduce using rule 45 (final_expression -> nativas .)
    DIVIDIDO        reduce using rule 45 (final_expression -> nativas .)
    POTENCIA        reduce using rule 45 (final_expression -> nativas .)
    MODULO          reduce using rule 45 (final_expression -> nativas .)
    MAYQUE          reduce using rule 45 (final_expression -> nativas .)
    MENQUE          reduce using rule 45 (final_expression -> nativas .)
    MENIGUALQUE     reduce using rule 45 (final_expression -> nativas .)
    MAYIGUALQUE     reduce using rule 45 (final_expression -> nativas .)
    IGUALQUE        reduce using rule 45 (final_expression -> nativas .)
    NIGUALQUE       reduce using rule 45 (final_expression -> nativas .)
    OR              reduce using rule 45 (final_expression -> nativas .)
    AND             reduce using rule 45 (final_expression -> nativas .)
    LINEANUEVA      shift and go to state 47


state 182

    (68) declare_function -> DEF ID PARIZQ dec_params PARDER DOSP statement . END

    END             shift and go to state 190


state 183

    (70) dec_params -> dec_params COMA ID DOSP . tipo
    (53) tipo -> . INT
    (54) tipo -> . FLOAT
    (55) tipo -> . BOOL
    (56) tipo -> . STR
    (57) tipo -> . NONE

    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    BOOL            shift and go to state 87
    STR             shift and go to state 88
    NONE            shift and go to state 89

    tipo                           shift and go to state 191

state 184

    (69) declare_function -> DEF ID PARIZQ PARDER DOSP statement END .

    LINEANUEVA      reduce using rule 69 (declare_function -> DEF ID PARIZQ PARDER DOSP statement END .)


state 185

    (75) if_state -> IF expression DOSP statement ELSE DOSP statement . END

    END             shift and go to state 192


state 186

    (77) else_if_list -> ELIF expression DOSP . statement
    (78) else_if_list -> ELIF expression DOSP . statement ELSE statement
    (79) else_if_list -> ELIF expression DOSP . statement else_if_list
    (67) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr LINEANUEVA
    (5) instruccion -> . println_instr LINEANUEVA
    (6) instruccion -> . asignacion_instr LINEANUEVA
    (7) instruccion -> . asignacion_arreglo_instr LINEANUEVA
    (8) instruccion -> . definicion_asignacion_instr LINEANUEVA
    (9) instruccion -> . call_function LINEANUEVA
    (10) instruccion -> . declare_function LINEANUEVA
    (11) instruccion -> . return_state LINEANUEVA
    (12) instruccion -> . break_state LINEANUEVA
    (13) instruccion -> . continue_state LINEANUEVA
    (14) instruccion -> . if_state LINEANUEVA
    (15) instruccion -> . while_state LINEANUEVA
    (16) instruccion -> . for_state LINEANUEVA
    (17) instruccion -> . nativas LINEANUEVA
    (51) print_instr -> . PRINT PARIZQ exp_list PARDER
    (52) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (58) asignacion_instr -> . ID IGUAL expression
    (60) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (59) definicion_asignacion_instr -> . ID DOSP tipo IGUAL expression
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (68) declare_function -> . DEF ID PARIZQ dec_params PARDER DOSP statement END
    (69) declare_function -> . DEF ID PARIZQ PARDER DOSP statement END
    (85) return_state -> . RETURN
    (86) return_state -> . RETURN expression
    (83) break_state -> . BREAK
    (84) continue_state -> . CONTINUE
    (74) if_state -> . IF expression DOSP statement END
    (75) if_state -> . IF expression DOSP statement ELSE DOSP statement END
    (76) if_state -> . IF expression DOSP statement else_if_list END
    (80) while_state -> . WHILE expression DOSP statement END
    (81) for_state -> . FOR ID IN expression DOSP expression DOSP statement END
    (82) for_state -> . FOR ID IN expression DOSP statement END
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 20
    DEF             shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    statement                      shift and go to state 193
    instrucciones                  shift and go to state 149
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    asignacion_instr               shift and go to state 6
    asignacion_arreglo_instr       shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16
    nativas                        shift and go to state 17

state 187

    (41) final_expression -> ID index_list .
    (60) asignacion_arreglo_instr -> ID index_list . IGUAL expression
    (65) index_list -> index_list . CORCHETEIZQ expression CORCHETEDER

    DOSP            reduce using rule 41 (final_expression -> ID index_list .)
    MAS             reduce using rule 41 (final_expression -> ID index_list .)
    MENOS           reduce using rule 41 (final_expression -> ID index_list .)
    POR             reduce using rule 41 (final_expression -> ID index_list .)
    DIVIDIDO        reduce using rule 41 (final_expression -> ID index_list .)
    POTENCIA        reduce using rule 41 (final_expression -> ID index_list .)
    MODULO          reduce using rule 41 (final_expression -> ID index_list .)
    MAYQUE          reduce using rule 41 (final_expression -> ID index_list .)
    MENQUE          reduce using rule 41 (final_expression -> ID index_list .)
    MENIGUALQUE     reduce using rule 41 (final_expression -> ID index_list .)
    MAYIGUALQUE     reduce using rule 41 (final_expression -> ID index_list .)
    IGUALQUE        reduce using rule 41 (final_expression -> ID index_list .)
    NIGUALQUE       reduce using rule 41 (final_expression -> ID index_list .)
    OR              reduce using rule 41 (final_expression -> ID index_list .)
    AND             reduce using rule 41 (final_expression -> ID index_list .)
    IGUAL           shift and go to state 82
    CORCHETEIZQ     shift and go to state 83


state 188

    (81) for_state -> FOR ID IN expression DOSP expression DOSP . statement END
    (67) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr LINEANUEVA
    (5) instruccion -> . println_instr LINEANUEVA
    (6) instruccion -> . asignacion_instr LINEANUEVA
    (7) instruccion -> . asignacion_arreglo_instr LINEANUEVA
    (8) instruccion -> . definicion_asignacion_instr LINEANUEVA
    (9) instruccion -> . call_function LINEANUEVA
    (10) instruccion -> . declare_function LINEANUEVA
    (11) instruccion -> . return_state LINEANUEVA
    (12) instruccion -> . break_state LINEANUEVA
    (13) instruccion -> . continue_state LINEANUEVA
    (14) instruccion -> . if_state LINEANUEVA
    (15) instruccion -> . while_state LINEANUEVA
    (16) instruccion -> . for_state LINEANUEVA
    (17) instruccion -> . nativas LINEANUEVA
    (51) print_instr -> . PRINT PARIZQ exp_list PARDER
    (52) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (58) asignacion_instr -> . ID IGUAL expression
    (60) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (59) definicion_asignacion_instr -> . ID DOSP tipo IGUAL expression
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (68) declare_function -> . DEF ID PARIZQ dec_params PARDER DOSP statement END
    (69) declare_function -> . DEF ID PARIZQ PARDER DOSP statement END
    (85) return_state -> . RETURN
    (86) return_state -> . RETURN expression
    (83) break_state -> . BREAK
    (84) continue_state -> . CONTINUE
    (74) if_state -> . IF expression DOSP statement END
    (75) if_state -> . IF expression DOSP statement ELSE DOSP statement END
    (76) if_state -> . IF expression DOSP statement else_if_list END
    (80) while_state -> . WHILE expression DOSP statement END
    (81) for_state -> . FOR ID IN expression DOSP expression DOSP statement END
    (82) for_state -> . FOR ID IN expression DOSP statement END
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 20
    DEF             shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    statement                      shift and go to state 194
    instrucciones                  shift and go to state 149
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    asignacion_instr               shift and go to state 6
    asignacion_arreglo_instr       shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16
    nativas                        shift and go to state 17

state 189

    (82) for_state -> FOR ID IN expression DOSP statement END .

    LINEANUEVA      reduce using rule 82 (for_state -> FOR ID IN expression DOSP statement END .)


state 190

    (68) declare_function -> DEF ID PARIZQ dec_params PARDER DOSP statement END .

    LINEANUEVA      reduce using rule 68 (declare_function -> DEF ID PARIZQ dec_params PARDER DOSP statement END .)


state 191

    (70) dec_params -> dec_params COMA ID DOSP tipo .

    PARDER          reduce using rule 70 (dec_params -> dec_params COMA ID DOSP tipo .)
    COMA            reduce using rule 70 (dec_params -> dec_params COMA ID DOSP tipo .)


state 192

    (75) if_state -> IF expression DOSP statement ELSE DOSP statement END .

    LINEANUEVA      reduce using rule 75 (if_state -> IF expression DOSP statement ELSE DOSP statement END .)


state 193

    (77) else_if_list -> ELIF expression DOSP statement .
    (78) else_if_list -> ELIF expression DOSP statement . ELSE statement
    (79) else_if_list -> ELIF expression DOSP statement . else_if_list
    (77) else_if_list -> . ELIF expression DOSP statement
    (78) else_if_list -> . ELIF expression DOSP statement ELSE statement
    (79) else_if_list -> . ELIF expression DOSP statement else_if_list

    END             reduce using rule 77 (else_if_list -> ELIF expression DOSP statement .)
    ELSE            shift and go to state 195
    ELIF            shift and go to state 167

    else_if_list                   shift and go to state 196

state 194

    (81) for_state -> FOR ID IN expression DOSP expression DOSP statement . END

    END             shift and go to state 197


state 195

    (78) else_if_list -> ELIF expression DOSP statement ELSE . statement
    (67) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr LINEANUEVA
    (5) instruccion -> . println_instr LINEANUEVA
    (6) instruccion -> . asignacion_instr LINEANUEVA
    (7) instruccion -> . asignacion_arreglo_instr LINEANUEVA
    (8) instruccion -> . definicion_asignacion_instr LINEANUEVA
    (9) instruccion -> . call_function LINEANUEVA
    (10) instruccion -> . declare_function LINEANUEVA
    (11) instruccion -> . return_state LINEANUEVA
    (12) instruccion -> . break_state LINEANUEVA
    (13) instruccion -> . continue_state LINEANUEVA
    (14) instruccion -> . if_state LINEANUEVA
    (15) instruccion -> . while_state LINEANUEVA
    (16) instruccion -> . for_state LINEANUEVA
    (17) instruccion -> . nativas LINEANUEVA
    (51) print_instr -> . PRINT PARIZQ exp_list PARDER
    (52) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (58) asignacion_instr -> . ID IGUAL expression
    (60) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (59) definicion_asignacion_instr -> . ID DOSP tipo IGUAL expression
    (61) call_function -> . ID PARIZQ PARDER
    (62) call_function -> . ID PARIZQ exp_list PARDER
    (68) declare_function -> . DEF ID PARIZQ dec_params PARDER DOSP statement END
    (69) declare_function -> . DEF ID PARIZQ PARDER DOSP statement END
    (85) return_state -> . RETURN
    (86) return_state -> . RETURN expression
    (83) break_state -> . BREAK
    (84) continue_state -> . CONTINUE
    (74) if_state -> . IF expression DOSP statement END
    (75) if_state -> . IF expression DOSP statement ELSE DOSP statement END
    (76) if_state -> . IF expression DOSP statement else_if_list END
    (80) while_state -> . WHILE expression DOSP statement END
    (81) for_state -> . FOR ID IN expression DOSP expression DOSP statement END
    (82) for_state -> . FOR ID IN expression DOSP statement END
    (46) nativas -> . UPPER PARIZQ expression PARDER
    (47) nativas -> . LOWER PARIZQ expression PARDER
    (48) nativas -> . STR PARIZQ expression PARDER
    (49) nativas -> . FLOAT PARIZQ expression PARDER
    (50) nativas -> . LEN PARIZQ expression PARDER

    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 20
    DEF             shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    UPPER           shift and go to state 28
    LOWER           shift and go to state 29
    STR             shift and go to state 30
    FLOAT           shift and go to state 31
    LEN             shift and go to state 32

    statement                      shift and go to state 198
    instrucciones                  shift and go to state 149
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    asignacion_instr               shift and go to state 6
    asignacion_arreglo_instr       shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16
    nativas                        shift and go to state 17

state 196

    (79) else_if_list -> ELIF expression DOSP statement else_if_list .

    END             reduce using rule 79 (else_if_list -> ELIF expression DOSP statement else_if_list .)


state 197

    (81) for_state -> FOR ID IN expression DOSP expression DOSP statement END .

    LINEANUEVA      reduce using rule 81 (for_state -> FOR ID IN expression DOSP expression DOSP statement END .)


state 198

    (78) else_if_list -> ELIF expression DOSP statement ELSE statement .

    END             reduce using rule 78 (else_if_list -> ELIF expression DOSP statement ELSE statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOSP in state 177 resolved as shift
